{"version":3,"file":"constants.esm.js","sources":["../src/constants.ts"],"sourcesContent":["/**\n * Unsigned 32-bit integer\n */\nenum ChainID {\n  Testnet = 0x80000000,\n  Mainnet = 0x00000001,\n}\n\nconst DEFAULT_CHAIN_ID = ChainID.Mainnet;\nconst MAX_STRING_LENGTH_BYTES = 128;\nconst CLARITY_INT_SIZE = 128;\nconst COINBASE_BUFFER_LENGTH_BYTES = 32;\nconst RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;\nconst COMPRESSED_PUBKEY_LENGTH_BYTES = 32;\nconst UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;\nconst MEMO_MAX_LENGTH_BYTES = 34;\nconst DEFAULT_CORE_NODE_API_URL = 'https://stacks-node-api.mainnet.stacks.co';\n\nenum StacksMessageType {\n  Address,\n  Principal,\n  LengthPrefixedString,\n  MemoString,\n  AssetInfo,\n  PostCondition,\n  PublicKey,\n  LengthPrefixedList,\n  Payload,\n  MessageSignature,\n  TransactionAuthField,\n}\n\nenum PayloadType {\n  TokenTransfer = 0x00,\n  SmartContract = 0x01,\n  ContractCall = 0x02,\n  PoisonMicroblock = 0x03,\n  Coinbase = 0x04,\n}\n\nenum AnchorMode {\n  OnChainOnly = 0x01,\n  OffChainOnly = 0x02,\n  Any = 0x03,\n}\n\nenum TransactionVersion {\n  Mainnet = 0x00,\n  Testnet = 0x80,\n}\n\nconst DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;\n\nenum PostConditionMode {\n  Allow = 0x01,\n  Deny = 0x02,\n}\n\nenum PostConditionType {\n  STX = 0x00,\n  Fungible = 0x01,\n  NonFungible = 0x02,\n}\n\nenum AuthType {\n  Standard = 0x04,\n  Sponsored = 0x05,\n}\n\nenum AddressHashMode {\n  // serialization modes for public keys to addresses.\n  // We support four different modes due to legacy compatibility with Stacks v1 addresses:\n  /** SingleSigHashMode - hash160(public-key), same as bitcoin's p2pkh */\n  SerializeP2PKH = 0x00,\n  /** MultiSigHashMode - hash160(multisig-redeem-script), same as bitcoin's multisig p2sh */\n  SerializeP2SH = 0x01,\n  /** SingleSigHashMode - hash160(segwit-program-00(p2pkh)), same as bitcoin's p2sh-p2wpkh */\n  SerializeP2WPKH = 0x02,\n  /** MultiSigHashMode - hash160(segwit-program-00(public-keys)), same as bitcoin's p2sh-p2wsh */\n  SerializeP2WSH = 0x03,\n}\n\ntype SingleSigHashMode = AddressHashMode.SerializeP2PKH | AddressHashMode.SerializeP2WPKH;\ntype MultiSigHashMode = AddressHashMode.SerializeP2SH | AddressHashMode.SerializeP2WSH;\n\nenum AddressVersion {\n  MainnetSingleSig = 22,\n  MainnetMultiSig = 20,\n  TestnetSingleSig = 26,\n  TestnetMultiSig = 21,\n}\n\nenum PubKeyEncoding {\n  Compressed = 0x00,\n  Uncompressed = 0x01,\n}\n\nenum FungibleConditionCode {\n  Equal = 0x01,\n  Greater = 0x02,\n  GreaterEqual = 0x03,\n  Less = 0x04,\n  LessEqual = 0x05,\n}\n\nenum NonFungibleConditionCode {\n  DoesNotOwn = 0x10,\n  Owns = 0x11,\n}\n\nenum PostConditionPrincipalID {\n  Origin = 0x01,\n  Standard = 0x02,\n  Contract = 0x03,\n}\n\nenum AssetType {\n  STX = 0x00,\n  Fungible = 0x01,\n  NonFungible = 0x02,\n}\n\nenum TxRejectedReason {\n  Serialization = 'Serialization',\n  Deserialization = 'Deserialization',\n  SignatureValidation = 'SignatureValidation',\n  FeeTooLow = 'FeeTooLow',\n  BadNonce = 'BadNonce',\n  NotEnoughFunds = 'NotEnoughFunds',\n  NoSuchContract = 'NoSuchContract',\n  NoSuchPublicFunction = 'NoSuchPublicFunction',\n  BadFunctionArgument = 'BadFunctionArgument',\n  ContractAlreadyExists = 'ContractAlreadyExists',\n  PoisonMicroblocksDoNotConflict = 'PoisonMicroblocksDoNotConflict',\n  PoisonMicroblockHasUnknownPubKeyHash = 'PoisonMicroblockHasUnknownPubKeyHash',\n  PoisonMicroblockIsInvalid = 'PoisonMicroblockIsInvalid',\n  BadAddressVersionByte = 'BadAddressVersionByte',\n  NoCoinbaseViaMempool = 'NoCoinbaseViaMempool',\n  ServerFailureNoSuchChainTip = 'ServerFailureNoSuchChainTip',\n  ServerFailureDatabase = 'ServerFailureDatabase',\n  ServerFailureOther = 'ServerFailureOther',\n}\n\nexport {\n  MAX_STRING_LENGTH_BYTES,\n  CLARITY_INT_SIZE,\n  COINBASE_BUFFER_LENGTH_BYTES,\n  DEFAULT_CHAIN_ID,\n  DEFAULT_TRANSACTION_VERSION,\n  RECOVERABLE_ECDSA_SIG_LENGTH_BYTES,\n  COMPRESSED_PUBKEY_LENGTH_BYTES,\n  UNCOMPRESSED_PUBKEY_LENGTH_BYTES,\n  MEMO_MAX_LENGTH_BYTES,\n  DEFAULT_CORE_NODE_API_URL,\n  ChainID,\n  StacksMessageType,\n  PayloadType,\n  AnchorMode,\n  TransactionVersion,\n  PostConditionMode,\n  PostConditionType,\n  PostConditionPrincipalID,\n  AuthType,\n  AddressHashMode,\n  SingleSigHashMode,\n  MultiSigHashMode,\n  AddressVersion,\n  PubKeyEncoding,\n  FungibleConditionCode,\n  NonFungibleConditionCode,\n  AssetType,\n  TxRejectedReason,\n};\n"],"names":["ChainID","DEFAULT_CHAIN_ID","Mainnet","MAX_STRING_LENGTH_BYTES","CLARITY_INT_SIZE","COINBASE_BUFFER_LENGTH_BYTES","RECOVERABLE_ECDSA_SIG_LENGTH_BYTES","COMPRESSED_PUBKEY_LENGTH_BYTES","UNCOMPRESSED_PUBKEY_LENGTH_BYTES","MEMO_MAX_LENGTH_BYTES","DEFAULT_CORE_NODE_API_URL","StacksMessageType","PayloadType","AnchorMode","TransactionVersion","DEFAULT_TRANSACTION_VERSION","PostConditionMode","PostConditionType","AuthType","AddressHashMode","AddressVersion","PubKeyEncoding","FungibleConditionCode","NonFungibleConditionCode","PostConditionPrincipalID","AssetType","TxRejectedReason"],"mappings":"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"}