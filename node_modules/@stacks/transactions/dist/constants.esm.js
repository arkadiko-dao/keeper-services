var ChainID;

(function (ChainID) {
  ChainID[ChainID["Testnet"] = 2147483648] = "Testnet";
  ChainID[ChainID["Mainnet"] = 1] = "Mainnet";
})(ChainID || (ChainID = {}));

var DEFAULT_CHAIN_ID = ChainID.Mainnet;
var MAX_STRING_LENGTH_BYTES = 128;
var CLARITY_INT_SIZE = 128;
var COINBASE_BUFFER_LENGTH_BYTES = 32;
var RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;
var COMPRESSED_PUBKEY_LENGTH_BYTES = 32;
var UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;
var MEMO_MAX_LENGTH_BYTES = 34;
var DEFAULT_CORE_NODE_API_URL = 'https://stacks-node-api.mainnet.stacks.co';
var StacksMessageType;

(function (StacksMessageType) {
  StacksMessageType[StacksMessageType["Address"] = 0] = "Address";
  StacksMessageType[StacksMessageType["Principal"] = 1] = "Principal";
  StacksMessageType[StacksMessageType["LengthPrefixedString"] = 2] = "LengthPrefixedString";
  StacksMessageType[StacksMessageType["MemoString"] = 3] = "MemoString";
  StacksMessageType[StacksMessageType["AssetInfo"] = 4] = "AssetInfo";
  StacksMessageType[StacksMessageType["PostCondition"] = 5] = "PostCondition";
  StacksMessageType[StacksMessageType["PublicKey"] = 6] = "PublicKey";
  StacksMessageType[StacksMessageType["LengthPrefixedList"] = 7] = "LengthPrefixedList";
  StacksMessageType[StacksMessageType["Payload"] = 8] = "Payload";
  StacksMessageType[StacksMessageType["MessageSignature"] = 9] = "MessageSignature";
  StacksMessageType[StacksMessageType["TransactionAuthField"] = 10] = "TransactionAuthField";
})(StacksMessageType || (StacksMessageType = {}));

var PayloadType;

(function (PayloadType) {
  PayloadType[PayloadType["TokenTransfer"] = 0] = "TokenTransfer";
  PayloadType[PayloadType["SmartContract"] = 1] = "SmartContract";
  PayloadType[PayloadType["ContractCall"] = 2] = "ContractCall";
  PayloadType[PayloadType["PoisonMicroblock"] = 3] = "PoisonMicroblock";
  PayloadType[PayloadType["Coinbase"] = 4] = "Coinbase";
})(PayloadType || (PayloadType = {}));

var AnchorMode;

(function (AnchorMode) {
  AnchorMode[AnchorMode["OnChainOnly"] = 1] = "OnChainOnly";
  AnchorMode[AnchorMode["OffChainOnly"] = 2] = "OffChainOnly";
  AnchorMode[AnchorMode["Any"] = 3] = "Any";
})(AnchorMode || (AnchorMode = {}));

var TransactionVersion;

(function (TransactionVersion) {
  TransactionVersion[TransactionVersion["Mainnet"] = 0] = "Mainnet";
  TransactionVersion[TransactionVersion["Testnet"] = 128] = "Testnet";
})(TransactionVersion || (TransactionVersion = {}));

var DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;
var PostConditionMode;

(function (PostConditionMode) {
  PostConditionMode[PostConditionMode["Allow"] = 1] = "Allow";
  PostConditionMode[PostConditionMode["Deny"] = 2] = "Deny";
})(PostConditionMode || (PostConditionMode = {}));

var PostConditionType;

(function (PostConditionType) {
  PostConditionType[PostConditionType["STX"] = 0] = "STX";
  PostConditionType[PostConditionType["Fungible"] = 1] = "Fungible";
  PostConditionType[PostConditionType["NonFungible"] = 2] = "NonFungible";
})(PostConditionType || (PostConditionType = {}));

var AuthType;

(function (AuthType) {
  AuthType[AuthType["Standard"] = 4] = "Standard";
  AuthType[AuthType["Sponsored"] = 5] = "Sponsored";
})(AuthType || (AuthType = {}));

var AddressHashMode;

(function (AddressHashMode) {
  AddressHashMode[AddressHashMode["SerializeP2PKH"] = 0] = "SerializeP2PKH";
  AddressHashMode[AddressHashMode["SerializeP2SH"] = 1] = "SerializeP2SH";
  AddressHashMode[AddressHashMode["SerializeP2WPKH"] = 2] = "SerializeP2WPKH";
  AddressHashMode[AddressHashMode["SerializeP2WSH"] = 3] = "SerializeP2WSH";
})(AddressHashMode || (AddressHashMode = {}));

var AddressVersion;

(function (AddressVersion) {
  AddressVersion[AddressVersion["MainnetSingleSig"] = 22] = "MainnetSingleSig";
  AddressVersion[AddressVersion["MainnetMultiSig"] = 20] = "MainnetMultiSig";
  AddressVersion[AddressVersion["TestnetSingleSig"] = 26] = "TestnetSingleSig";
  AddressVersion[AddressVersion["TestnetMultiSig"] = 21] = "TestnetMultiSig";
})(AddressVersion || (AddressVersion = {}));

var PubKeyEncoding;

(function (PubKeyEncoding) {
  PubKeyEncoding[PubKeyEncoding["Compressed"] = 0] = "Compressed";
  PubKeyEncoding[PubKeyEncoding["Uncompressed"] = 1] = "Uncompressed";
})(PubKeyEncoding || (PubKeyEncoding = {}));

var FungibleConditionCode;

(function (FungibleConditionCode) {
  FungibleConditionCode[FungibleConditionCode["Equal"] = 1] = "Equal";
  FungibleConditionCode[FungibleConditionCode["Greater"] = 2] = "Greater";
  FungibleConditionCode[FungibleConditionCode["GreaterEqual"] = 3] = "GreaterEqual";
  FungibleConditionCode[FungibleConditionCode["Less"] = 4] = "Less";
  FungibleConditionCode[FungibleConditionCode["LessEqual"] = 5] = "LessEqual";
})(FungibleConditionCode || (FungibleConditionCode = {}));

var NonFungibleConditionCode;

(function (NonFungibleConditionCode) {
  NonFungibleConditionCode[NonFungibleConditionCode["DoesNotOwn"] = 16] = "DoesNotOwn";
  NonFungibleConditionCode[NonFungibleConditionCode["Owns"] = 17] = "Owns";
})(NonFungibleConditionCode || (NonFungibleConditionCode = {}));

var PostConditionPrincipalID;

(function (PostConditionPrincipalID) {
  PostConditionPrincipalID[PostConditionPrincipalID["Origin"] = 1] = "Origin";
  PostConditionPrincipalID[PostConditionPrincipalID["Standard"] = 2] = "Standard";
  PostConditionPrincipalID[PostConditionPrincipalID["Contract"] = 3] = "Contract";
})(PostConditionPrincipalID || (PostConditionPrincipalID = {}));

var AssetType;

(function (AssetType) {
  AssetType[AssetType["STX"] = 0] = "STX";
  AssetType[AssetType["Fungible"] = 1] = "Fungible";
  AssetType[AssetType["NonFungible"] = 2] = "NonFungible";
})(AssetType || (AssetType = {}));

var TxRejectedReason;

(function (TxRejectedReason) {
  TxRejectedReason["Serialization"] = "Serialization";
  TxRejectedReason["Deserialization"] = "Deserialization";
  TxRejectedReason["SignatureValidation"] = "SignatureValidation";
  TxRejectedReason["FeeTooLow"] = "FeeTooLow";
  TxRejectedReason["BadNonce"] = "BadNonce";
  TxRejectedReason["NotEnoughFunds"] = "NotEnoughFunds";
  TxRejectedReason["NoSuchContract"] = "NoSuchContract";
  TxRejectedReason["NoSuchPublicFunction"] = "NoSuchPublicFunction";
  TxRejectedReason["BadFunctionArgument"] = "BadFunctionArgument";
  TxRejectedReason["ContractAlreadyExists"] = "ContractAlreadyExists";
  TxRejectedReason["PoisonMicroblocksDoNotConflict"] = "PoisonMicroblocksDoNotConflict";
  TxRejectedReason["PoisonMicroblockHasUnknownPubKeyHash"] = "PoisonMicroblockHasUnknownPubKeyHash";
  TxRejectedReason["PoisonMicroblockIsInvalid"] = "PoisonMicroblockIsInvalid";
  TxRejectedReason["BadAddressVersionByte"] = "BadAddressVersionByte";
  TxRejectedReason["NoCoinbaseViaMempool"] = "NoCoinbaseViaMempool";
  TxRejectedReason["ServerFailureNoSuchChainTip"] = "ServerFailureNoSuchChainTip";
  TxRejectedReason["ServerFailureDatabase"] = "ServerFailureDatabase";
  TxRejectedReason["ServerFailureOther"] = "ServerFailureOther";
})(TxRejectedReason || (TxRejectedReason = {}));

export { AddressHashMode, AddressVersion, AnchorMode, AssetType, AuthType, CLARITY_INT_SIZE, COINBASE_BUFFER_LENGTH_BYTES, COMPRESSED_PUBKEY_LENGTH_BYTES, ChainID, DEFAULT_CHAIN_ID, DEFAULT_CORE_NODE_API_URL, DEFAULT_TRANSACTION_VERSION, FungibleConditionCode, MAX_STRING_LENGTH_BYTES, MEMO_MAX_LENGTH_BYTES, NonFungibleConditionCode, PayloadType, PostConditionMode, PostConditionPrincipalID, PostConditionType, PubKeyEncoding, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, StacksMessageType, TransactionVersion, TxRejectedReason, UNCOMPRESSED_PUBKEY_LENGTH_BYTES };
//# sourceMappingURL=constants.esm.js.map
