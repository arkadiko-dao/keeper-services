{"version":3,"file":"bufferReader.esm.js","sources":["../src/bufferReader.ts"],"sourcesContent":["import { SmartBuffer, SmartBufferOptions } from 'smart-buffer';\n\nfunction createEnumChecker<T extends string, TEnumValue extends number>(\n  enumVariable: { [key in T]: TEnumValue }\n): (value: number) => value is TEnumValue {\n  // Create a set of valid enum number values.\n  const enumValues = Object.values<number>(enumVariable).filter(v => typeof v === 'number');\n  const enumValueSet = new Set<number>(enumValues);\n  return (value: number): value is TEnumValue => enumValueSet.has(value);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst enumCheckFunctions = new Map<object, (value: number) => boolean>();\n\n/**\n * Type guard to check if a given value is a valid enum value.\n * @param enumVariable - Literal `enum` type.\n * @param value - A value to check against the enum's values.\n * @example\n * ```ts\n * enum Color {\n *   Purple = 3,\n *   Orange = 5\n * }\n * const val: number = 3;\n * if (isEnum(Color, val)) {\n *   // `val` is known as enum type `Color`, e.g.:\n *   const colorVal: Color = val;\n * }\n * ```\n */\nexport function isEnum<T extends string, TEnumValue extends number>(\n  enumVariable: { [key in T]: TEnumValue },\n  value: number\n): value is TEnumValue {\n  const checker = enumCheckFunctions.get(enumVariable);\n  if (checker !== undefined) {\n    return checker(value);\n  }\n  const newChecker = createEnumChecker(enumVariable);\n  enumCheckFunctions.set(enumVariable, newChecker);\n  return isEnum(enumVariable, value);\n}\n\nexport class BufferReader {\n  smartBuffer: SmartBuffer;\n\n  static fromBuffer(buffer: Buffer): BufferReader {\n    return new BufferReader({ buff: buffer });\n  }\n\n  constructor(options?: SmartBufferOptions | Buffer) {\n    if (Buffer.isBuffer(options)) {\n      this.smartBuffer = new SmartBuffer({ buff: options });\n    } else {\n      this.smartBuffer = new SmartBuffer(options);\n    }\n  }\n\n  readBuffer(length: number): Buffer {\n    return this.smartBuffer.readBuffer(length);\n  }\n\n  readUInt32BE(offset?: number): number {\n    return this.smartBuffer.readUInt32BE(offset);\n  }\n\n  readUInt8(): number {\n    return this.smartBuffer.readUInt8();\n  }\n\n  readUInt16BE(): number {\n    return this.smartBuffer.readUInt16BE();\n  }\n\n  readBigUIntLE(length: number): bigint {\n    const buffer = Buffer.from(this.smartBuffer.readBuffer(length)).reverse();\n    const hex = buffer.toString();\n    const num = BigInt(`0x${hex}`);\n    return num;\n  }\n\n  readBigUIntBE(length: number): bigint {\n    const buffer = this.smartBuffer.readBuffer(length);\n    const hex = buffer.toString('hex');\n    const num = BigInt(`0x${hex}`);\n    return num;\n  }\n\n  readBigUInt64BE(): bigint {\n    return this.smartBuffer.readBigUInt64BE();\n  }\n\n  readString(arg?: number | BufferEncoding, encoding?: BufferEncoding): string {\n    return this.smartBuffer.readString(arg, encoding);\n  }\n\n  get readOffset(): number {\n    return this.smartBuffer.readOffset;\n  }\n\n  set readOffset(val: number) {\n    this.smartBuffer.readOffset = val;\n  }\n\n  get internalBuffer(): Buffer {\n    return this.smartBuffer.internalBuffer;\n  }\n\n  readUInt8Enum<T extends string, TEnumValue extends number>(\n    enumVariable: { [key in T]: TEnumValue },\n    invalidEnumErrorFormatter: (val: number) => Error\n  ): TEnumValue {\n    const num = this.smartBuffer.readUInt8();\n    if (isEnum(enumVariable, num)) {\n      return num;\n    } else {\n      throw invalidEnumErrorFormatter(num);\n    }\n  }\n}\n"],"names":["createEnumChecker","enumVariable","enumValues","Object","values","filter","v","enumValueSet","Set","value","has","enumCheckFunctions","Map","isEnum","checker","get","undefined","newChecker","set","BufferReader","options","Buffer","isBuffer","smartBuffer","SmartBuffer","buff","fromBuffer","buffer","readBuffer","length","readUInt32BE","offset","readUInt8","readUInt16BE","readBigUIntLE","from","reverse","hex","toString","num","BigInt","readBigUIntBE","readBigUInt64BE","readString","arg","encoding","readUInt8Enum","invalidEnumErrorFormatter","readOffset","val","internalBuffer"],"mappings":"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"}