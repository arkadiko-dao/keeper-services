{"version":3,"file":"stringCV.esm.js","sources":["../../../src/clarity/types/stringCV.ts"],"sourcesContent":["import { ClarityType } from '../clarityValue';\n\ninterface StringAsciiCV {\n  readonly type: ClarityType.StringASCII;\n  readonly data: string;\n}\n\ninterface StringUtf8CV {\n  readonly type: ClarityType.StringUTF8;\n  readonly data: string;\n}\n\nconst stringAsciiCV = (data: string): StringAsciiCV => {\n  return { type: ClarityType.StringASCII, data };\n};\n\nconst stringUtf8CV = (data: string): StringUtf8CV => {\n  return { type: ClarityType.StringUTF8, data };\n};\n\nconst stringCV = (data: string, encoding: 'ascii' | 'utf8'): StringAsciiCV | StringUtf8CV => {\n  switch (encoding) {\n    case 'ascii':\n      return stringAsciiCV(data);\n    case 'utf8':\n      return stringAsciiCV(data);\n  }\n};\n\nexport { StringAsciiCV, StringUtf8CV, stringAsciiCV, stringUtf8CV, stringCV };\n"],"names":["stringAsciiCV","data","type","ClarityType","StringASCII","stringUtf8CV","StringUTF8"],"mappings":";;IAYMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD;AACpB,SAAO;AAAEC,IAAAA,IAAI,EAAEC,WAAW,CAACC,WAApB;AAAiCH,IAAAA,IAAI,EAAJA;AAAjC,GAAP;AACD;;IAEKI,YAAY,GAAG,SAAfA,YAAe,CAACJ,IAAD;AACnB,SAAO;AAAEC,IAAAA,IAAI,EAAEC,WAAW,CAACG,UAApB;AAAgCL,IAAAA,IAAI,EAAJA;AAAhC,GAAP;AACD;;;;"}