{"version":3,"file":"principalCV.esm.js","sources":["../../../src/clarity/types/principalCV.ts"],"sourcesContent":["import {\n  Address,\n  LengthPrefixedString,\n  createAddress,\n  createLPString,\n  addressToString,\n} from '../../types';\nimport { ClarityType } from '../clarityValue';\n\ntype PrincipalCV = StandardPrincipalCV | ContractPrincipalCV;\n\ninterface StandardPrincipalCV {\n  readonly type: ClarityType.PrincipalStandard;\n  readonly address: Address;\n}\n\ninterface ContractPrincipalCV {\n  readonly type: ClarityType.PrincipalContract;\n  readonly address: Address;\n  readonly contractName: LengthPrefixedString;\n}\n\nfunction principalToString(principal: PrincipalCV): string {\n  if (principal.type === ClarityType.PrincipalStandard) {\n    return addressToString(principal.address);\n  } else if (principal.type === ClarityType.PrincipalContract) {\n    const address = addressToString(principal.address);\n    return `${address}.${principal.contractName.content}`;\n  } else {\n    throw new Error(`Unexpected principal data: ${JSON.stringify(principal)}`);\n  }\n}\n\nfunction principalCV(principal: string): PrincipalCV {\n  if (principal.includes('.')) {\n    const [address, contractName] = principal.split('.');\n    return contractPrincipalCV(address, contractName);\n  } else {\n    return standardPrincipalCV(principal);\n  }\n}\n\nfunction standardPrincipalCV(addressString: string): StandardPrincipalCV {\n  const addr = createAddress(addressString);\n  return { type: ClarityType.PrincipalStandard, address: addr };\n}\n\nfunction standardPrincipalCVFromAddress(address: Address): StandardPrincipalCV {\n  return { type: ClarityType.PrincipalStandard, address };\n}\n\nfunction contractPrincipalCV(addressString: string, contractName: string): ContractPrincipalCV {\n  const addr = createAddress(addressString);\n  const lengthPrefixedContractName = createLPString(contractName);\n  return contractPrincipalCVFromAddress(addr, lengthPrefixedContractName);\n}\n\nfunction contractPrincipalCVFromAddress(\n  address: Address,\n  contractName: LengthPrefixedString\n): ContractPrincipalCV {\n  if (Buffer.byteLength(contractName.content) >= 128) {\n    throw new Error('Contract name must be less than 128 bytes');\n  }\n  return { type: ClarityType.PrincipalContract, address, contractName };\n}\n\nfunction contractPrincipalCVFromStandard(\n  sp: StandardPrincipalCV,\n  contractName: string\n): ContractPrincipalCV {\n  const lengthPrefixedContractName = createLPString(contractName);\n  return {\n    type: ClarityType.PrincipalContract,\n    address: sp.address,\n    contractName: lengthPrefixedContractName,\n  };\n}\n\nexport {\n  PrincipalCV,\n  StandardPrincipalCV,\n  ContractPrincipalCV,\n  principalCV,\n  principalToString,\n  standardPrincipalCV,\n  standardPrincipalCVFromAddress,\n  contractPrincipalCV,\n  contractPrincipalCVFromAddress,\n  contractPrincipalCVFromStandard,\n};\n"],"names":["principalToString","principal","type","ClarityType","PrincipalStandard","addressToString","address","PrincipalContract","contractName","content","Error","JSON","stringify","principalCV","includes","split","contractPrincipalCV","standardPrincipalCV","addressString","addr","createAddress","standardPrincipalCVFromAddress","lengthPrefixedContractName","createLPString","contractPrincipalCVFromAddress","Buffer","byteLength","contractPrincipalCVFromStandard","sp"],"mappings":";;;AAsBA,SAASA,iBAAT,CAA2BC,SAA3B;AACE,MAAIA,SAAS,CAACC,IAAV,KAAmBC,WAAW,CAACC,iBAAnC,EAAsD;AACpD,WAAOC,eAAe,CAACJ,SAAS,CAACK,OAAX,CAAtB;AACD,GAFD,MAEO,IAAIL,SAAS,CAACC,IAAV,KAAmBC,WAAW,CAACI,iBAAnC,EAAsD;AAC3D,QAAMD,OAAO,GAAGD,eAAe,CAACJ,SAAS,CAACK,OAAX,CAA/B;AACA,WAAUA,OAAV,SAAqBL,SAAS,CAACO,YAAV,CAAuBC,OAA5C;AACD,GAHM,MAGA;AACL,UAAM,IAAIC,KAAJ,iCAAwCC,IAAI,CAACC,SAAL,CAAeX,SAAf,CAAxC,CAAN;AACD;AACF;;AAED,SAASY,WAAT,CAAqBZ,SAArB;AACE,MAAIA,SAAS,CAACa,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAAA,2BACKb,SAAS,CAACc,KAAV,CAAgB,GAAhB,CADL;AAAA,QACpBT,OADoB;AAAA,QACXE,YADW;;AAE3B,WAAOQ,mBAAmB,CAACV,OAAD,EAAUE,YAAV,CAA1B;AACD,GAHD,MAGO;AACL,WAAOS,mBAAmB,CAAChB,SAAD,CAA1B;AACD;AACF;;AAED,SAASgB,mBAAT,CAA6BC,aAA7B;AACE,MAAMC,IAAI,GAAGC,aAAa,CAACF,aAAD,CAA1B;AACA,SAAO;AAAEhB,IAAAA,IAAI,EAAEC,WAAW,CAACC,iBAApB;AAAuCE,IAAAA,OAAO,EAAEa;AAAhD,GAAP;AACD;;AAED,SAASE,8BAAT,CAAwCf,OAAxC;AACE,SAAO;AAAEJ,IAAAA,IAAI,EAAEC,WAAW,CAACC,iBAApB;AAAuCE,IAAAA,OAAO,EAAPA;AAAvC,GAAP;AACD;;AAED,SAASU,mBAAT,CAA6BE,aAA7B,EAAoDV,YAApD;AACE,MAAMW,IAAI,GAAGC,aAAa,CAACF,aAAD,CAA1B;AACA,MAAMI,0BAA0B,GAAGC,cAAc,CAACf,YAAD,CAAjD;AACA,SAAOgB,8BAA8B,CAACL,IAAD,EAAOG,0BAAP,CAArC;AACD;;AAED,SAASE,8BAAT,CACElB,OADF,EAEEE,YAFF;AAIE,MAAIiB,MAAM,CAACC,UAAP,CAAkBlB,YAAY,CAACC,OAA/B,KAA2C,GAA/C,EAAoD;AAClD,UAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACD;;AACD,SAAO;AAAER,IAAAA,IAAI,EAAEC,WAAW,CAACI,iBAApB;AAAuCD,IAAAA,OAAO,EAAPA,OAAvC;AAAgDE,IAAAA,YAAY,EAAZA;AAAhD,GAAP;AACD;;AAED,SAASmB,+BAAT,CACEC,EADF,EAEEpB,YAFF;AAIE,MAAMc,0BAA0B,GAAGC,cAAc,CAACf,YAAD,CAAjD;AACA,SAAO;AACLN,IAAAA,IAAI,EAAEC,WAAW,CAACI,iBADb;AAELD,IAAAA,OAAO,EAAEsB,EAAE,CAACtB,OAFP;AAGLE,IAAAA,YAAY,EAAEc;AAHT,GAAP;AAKD;;;;"}