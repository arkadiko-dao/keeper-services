{"version":3,"file":"errors.esm.js","sources":["../src/errors.ts"],"sourcesContent":["/**\n * @ignore\n */\nexport const ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  DOES_NOT_EXIST: 'does_not_exist',\n  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n  INVALID_DID_ERROR: 'invalid_did_error',\n  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n  INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n  LOGIN_FAILED_ERROR: 'login_failed',\n  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n  CONFLICT_ERROR: 'conflict_error',\n  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n  BAD_PATH_ERROR: 'bad_path_error',\n  VALIDATION_ERROR: 'validation_error',\n  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n  UNKNOWN: 'unknown',\n};\n\nObject.freeze(ERROR_CODES);\n\n/**\n * @ignore\n */\ntype ErrorData = {\n  code: string;\n  parameter?: string;\n  message: string;\n};\n\n/**\n * @ignore\n */\nexport class BlockstackError extends Error {\n  message: string;\n\n  code: string;\n\n  parameter?: string;\n\n  constructor(error: ErrorData) {\n    super();\n    let message = error.message;\n    let bugDetails = `Error Code: ${error.code}`;\n    let stack = this.stack;\n    if (!stack) {\n      try {\n        throw new Error();\n      } catch (e) {\n        stack = e.stack;\n      }\n    } else {\n      bugDetails += `Stack Trace:\\n${stack}`;\n    }\n    message += `\\nIf you believe this exception is caused by a bug in blockstack.js,\n      please file a bug report: https://github.com/blockstack/blockstack.js/issues\\n\\n${bugDetails}`;\n    this.message = message;\n    this.code = error.code;\n    this.parameter = error.parameter ? error.parameter : undefined;\n  }\n\n  toString() {\n    return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class MissingParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class RemoteServiceError extends BlockstackError {\n  response: Response;\n\n  constructor(response: Response, message: string = '') {\n    super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n    this.response = response;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidDIDError extends BlockstackError {\n  constructor(message: string = '') {\n    super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n    this.name = 'InvalidDIDError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughFundsError extends BlockstackError {\n  leftToFund: number;\n\n  constructor(leftToFund: number) {\n    const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n    super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n    this.leftToFund = leftToFund;\n    this.name = 'NotEnoughFundsError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidAmountError extends BlockstackError {\n  fees: number;\n\n  specifiedAmount: number;\n\n  constructor(fees: number, specifiedAmount: number) {\n    const message =\n      `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n      ` specified spend is  ${specifiedAmount}`;\n    super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n    this.specifiedAmount = specifiedAmount;\n    this.fees = fees;\n    this.name = 'InvalidAmountError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class LoginFailedError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to login: ${reason}`;\n    super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n    this.message = message;\n    this.name = 'LoginFailedError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class SignatureVerificationError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to verify signature: ${reason}`;\n    super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n    this.message = message;\n    this.name = 'SignatureVerificationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class FailedDecryptionError extends BlockstackError {\n  constructor(message: string = 'Unable to decrypt cipher object.') {\n    super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n    this.message = message;\n    this.name = 'FailedDecryptionError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidStateError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'InvalidStateError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NoSessionDataError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'NoSessionDataError';\n  }\n}\n\n/**\n * @ignore\n */\nexport interface GaiaHubErrorResponse {\n  status: number;\n  statusText: string;\n  body?: string | any;\n}\n\nexport interface HubErrorDetails {\n  message?: string;\n  statusCode: number;\n  statusText: string;\n  [prop: string]: any;\n}\n\n/**\n * @ignore\n */\nexport class GaiaHubError extends BlockstackError {\n  hubError?: HubErrorDetails;\n\n  constructor(error: ErrorData, response: GaiaHubErrorResponse) {\n    super(error);\n    if (response) {\n      this.hubError = {\n        statusCode: response.status,\n        statusText: response.statusText,\n      };\n      if (typeof response.body === 'string') {\n        this.hubError.message = response.body;\n      } else if (typeof response.body === 'object') {\n        Object.assign(this.hubError, response.body);\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nexport class DoesNotExist extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n    this.name = 'DoesNotExist';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ConflictError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n    this.name = 'ConflictError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughProofError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n    this.name = 'NotEnoughProofError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class BadPathError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n    this.name = 'BadPathError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ValidationError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class PayloadTooLargeError extends GaiaHubError {\n  /** Can be `null` when an oversized payload is detected client-side. */\n  hubError?: HubErrorDetails;\n\n  maxUploadByteSize: number;\n\n  constructor(message: string, response: GaiaHubErrorResponse | null, maxUploadByteSize: number) {\n    super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response!);\n    this.name = 'PayloadTooLargeError';\n    this.maxUploadByteSize = maxUploadByteSize;\n  }\n}\n\n/**\n * @ignore\n */\nexport class PreconditionFailedError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n    this.name = 'PreconditionFailedError';\n  }\n}\n"],"names":["ERROR_CODES","MISSING_PARAMETER","REMOTE_SERVICE_ERROR","INVALID_STATE","NO_SESSION_DATA","DOES_NOT_EXIST","FAILED_DECRYPTION_ERROR","INVALID_DID_ERROR","NOT_ENOUGH_FUNDS_ERROR","INVALID_AMOUNT_ERROR","LOGIN_FAILED_ERROR","SIGNATURE_VERIFICATION_ERROR","CONFLICT_ERROR","NOT_ENOUGH_PROOF_ERROR","BAD_PATH_ERROR","VALIDATION_ERROR","PAYLOAD_TOO_LARGE_ERROR","PRECONDITION_FAILED_ERROR","UNKNOWN","Object","freeze","BlockstackError","error","message","bugDetails","code","stack","Error","e","parameter","undefined","toString","InvalidParameterError","name","MissingParameterError","RemoteServiceError","response","InvalidDIDError","NotEnoughFundsError","leftToFund","InvalidAmountError","fees","specifiedAmount","LoginFailedError","reason","SignatureVerificationError","FailedDecryptionError","InvalidStateError","NoSessionDataError","GaiaHubError","hubError","statusCode","status","statusText","body","assign","DoesNotExist","ConflictError","NotEnoughProofError","BadPathError","ValidationError","PayloadTooLargeError","maxUploadByteSize","PreconditionFailedError"],"mappings":";;IAGaA,WAAW,GAAG;AACzBC,EAAAA,iBAAiB,EAAE,mBADM;AAEzBC,EAAAA,oBAAoB,EAAE,sBAFG;AAGzBC,EAAAA,aAAa,EAAE,eAHU;AAIzBC,EAAAA,eAAe,EAAE,iBAJQ;AAKzBC,EAAAA,cAAc,EAAE,gBALS;AAMzBC,EAAAA,uBAAuB,EAAE,yBANA;AAOzBC,EAAAA,iBAAiB,EAAE,mBAPM;AAQzBC,EAAAA,sBAAsB,EAAE,kBARC;AASzBC,EAAAA,oBAAoB,EAAE,sBATG;AAUzBC,EAAAA,kBAAkB,EAAE,cAVK;AAWzBC,EAAAA,4BAA4B,EAAE,gCAXL;AAYzBC,EAAAA,cAAc,EAAE,gBAZS;AAazBC,EAAAA,sBAAsB,EAAE,wBAbC;AAczBC,EAAAA,cAAc,EAAE,gBAdS;AAezBC,EAAAA,gBAAgB,EAAE,kBAfO;AAgBzBC,EAAAA,uBAAuB,EAAE,yBAhBA;AAiBzBC,EAAAA,yBAAyB,EAAE,2BAjBF;AAkBzBC,EAAAA,OAAO,EAAE;AAlBgB;AAqB3BC,MAAM,CAACC,MAAP,CAAcpB,WAAd;IAcaqB,eAAb;AAAA;;AAOE,2BAAYC,KAAZ;;;AACE;AACA,QAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AACA,QAAIC,UAAU,oBAAkBF,KAAK,CAACG,IAAtC;AACA,QAAIC,KAAK,GAAG,MAAKA,KAAjB;;AACA,QAAI,CAACA,KAAL,EAAY;AACV,UAAI;AACF,cAAM,IAAIC,KAAJ,EAAN;AACD,OAFD,CAEE,OAAOC,CAAP,EAAU;AACVF,QAAAA,KAAK,GAAGE,CAAC,CAACF,KAAV;AACD;AACF,KAND,MAMO;AACLF,MAAAA,UAAU,uBAAqBE,KAA/B;AACD;;AACDH,IAAAA,OAAO,qKAC6EC,UADpF;AAEA,UAAKD,OAAL,GAAeA,OAAf;AACA,UAAKE,IAAL,GAAYH,KAAK,CAACG,IAAlB;AACA,UAAKI,SAAL,GAAiBP,KAAK,CAACO,SAAN,GAAkBP,KAAK,CAACO,SAAxB,GAAoCC,SAArD;;AACD;;AA1BH;;AAAA,SA4BEC,QA5BF,GA4BE;AACE,4BAAgBA,QAAhB,+BACQ,KAAKN,IADb,iBAC4B,KAAKI,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,KAD9D;AAED,GA/BH;;AAAA;AAAA,iCAAqCF,KAArC;IAqCaK,qBAAb;AAAA;;AACE,iCAAYH,SAAZ,EAA+BN,OAA/B;;;QAA+BA;AAAAA,MAAAA,UAAkB;;;AAC/C,yCAAM;AAAEE,MAAAA,IAAI,EAAEzB,WAAW,CAACC,iBAApB;AAAuCsB,MAAAA,OAAO,EAAPA,OAAvC;AAAgDM,MAAAA,SAAS,EAATA;AAAhD,KAAN;AACA,WAAKI,IAAL,GAAY,wBAAZ;;AACD;;AAJH;AAAA,EAA2CZ,eAA3C;IAUaa,qBAAb;AAAA;;AACE,iCAAYL,SAAZ,EAA+BN,OAA/B;;;QAA+BA;AAAAA,MAAAA,UAAkB;;;AAC/C,0CAAM;AAAEE,MAAAA,IAAI,EAAEzB,WAAW,CAACC,iBAApB;AAAuCsB,MAAAA,OAAO,EAAPA,OAAvC;AAAgDM,MAAAA,SAAS,EAATA;AAAhD,KAAN;AACA,WAAKI,IAAL,GAAY,wBAAZ;;AACD;;AAJH;AAAA,EAA2CZ,eAA3C;IAUac,kBAAb;AAAA;;AAGE,8BAAYC,QAAZ,EAAgCb,OAAhC;;;QAAgCA;AAAAA,MAAAA,UAAkB;;;AAChD,0CAAM;AAAEE,MAAAA,IAAI,EAAEzB,WAAW,CAACE,oBAApB;AAA0CqB,MAAAA,OAAO,EAAPA;AAA1C,KAAN;AACA,WAAKa,QAAL,GAAgBA,QAAhB;;AACD;;AANH;AAAA,EAAwCf,eAAxC;IAYagB,eAAb;AAAA;;AACE,2BAAYd,OAAZ;;;QAAYA;AAAAA,MAAAA,UAAkB;;;AAC5B,0CAAM;AAAEE,MAAAA,IAAI,EAAEzB,WAAW,CAACO,iBAApB;AAAuCgB,MAAAA,OAAO,EAAPA;AAAvC,KAAN;AACA,WAAKU,IAAL,GAAY,iBAAZ;;AACD;;AAJH;AAAA,EAAqCZ,eAArC;IAUaiB,mBAAb;AAAA;;AAGE,+BAAYC,UAAZ;;;AACE,QAAMhB,OAAO,gDAA8CgB,UAA3D;AACA,0CAAM;AAAEd,MAAAA,IAAI,EAAEzB,WAAW,CAACQ,sBAApB;AAA4Ce,MAAAA,OAAO,EAAPA;AAA5C,KAAN;AACA,WAAKgB,UAAL,GAAkBA,UAAlB;AACA,WAAKN,IAAL,GAAY,qBAAZ;AACA,WAAKV,OAAL,GAAeA,OAAf;;AACD;;AATH;AAAA,EAAyCF,eAAzC;IAeamB,kBAAb;AAAA;;AAKE,8BAAYC,IAAZ,EAA0BC,eAA1B;;;AACE,QAAMnB,OAAO,GACX,kEAAgEkB,IAAhE,oCACwBC,eADxB,CADF;AAGA,0CAAM;AAAEjB,MAAAA,IAAI,EAAEzB,WAAW,CAACS,oBAApB;AAA0Cc,MAAAA,OAAO,EAAPA;AAA1C,KAAN;AACA,WAAKmB,eAAL,GAAuBA,eAAvB;AACA,WAAKD,IAAL,GAAYA,IAAZ;AACA,WAAKR,IAAL,GAAY,oBAAZ;AACA,WAAKV,OAAL,GAAeA,OAAf;;AACD;;AAdH;AAAA,EAAwCF,eAAxC;IAoBasB,gBAAb;AAAA;;AACE,4BAAYC,MAAZ;;;AACE,QAAMrB,OAAO,yBAAuBqB,MAApC;AACA,0CAAM;AAAEnB,MAAAA,IAAI,EAAEzB,WAAW,CAACU,kBAApB;AAAwCa,MAAAA,OAAO,EAAPA;AAAxC,KAAN;AACA,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKU,IAAL,GAAY,kBAAZ;;AACD;;AANH;AAAA,EAAsCZ,eAAtC;IAYawB,0BAAb;AAAA;;AACE,sCAAYD,MAAZ;;;AACE,QAAMrB,OAAO,oCAAkCqB,MAA/C;AACA,0CAAM;AAAEnB,MAAAA,IAAI,EAAEzB,WAAW,CAACW,4BAApB;AAAkDY,MAAAA,OAAO,EAAPA;AAAlD,KAAN;AACA,WAAKA,OAAL,GAAeA,OAAf;AACA,WAAKU,IAAL,GAAY,4BAAZ;;AACD;;AANH;AAAA,EAAgDZ,eAAhD;IAYayB,qBAAb;AAAA;;AACE,iCAAYvB,OAAZ;;;QAAYA;AAAAA,MAAAA,UAAkB;;;AAC5B,2CAAM;AAAEE,MAAAA,IAAI,EAAEzB,WAAW,CAACM,uBAApB;AAA6CiB,MAAAA,OAAO,EAAPA;AAA7C,KAAN;AACA,YAAKA,OAAL,GAAeA,OAAf;AACA,YAAKU,IAAL,GAAY,uBAAZ;;AACD;;AALH;AAAA,EAA2CZ,eAA3C;IAWa0B,iBAAb;AAAA;;AACE,6BAAYxB,OAAZ;;;AACE,4CAAM;AAAEE,MAAAA,IAAI,EAAEzB,WAAW,CAACG,aAApB;AAAmCoB,MAAAA,OAAO,EAAPA;AAAnC,KAAN;AACA,YAAKA,OAAL,GAAeA,OAAf;AACA,YAAKU,IAAL,GAAY,mBAAZ;;AACD;;AALH;AAAA,EAAuCZ,eAAvC;IAWa2B,kBAAb;AAAA;;AACE,8BAAYzB,OAAZ;;;AACE,4CAAM;AAAEE,MAAAA,IAAI,EAAEzB,WAAW,CAACG,aAApB;AAAmCoB,MAAAA,OAAO,EAAPA;AAAnC,KAAN;AACA,YAAKA,OAAL,GAAeA,OAAf;AACA,YAAKU,IAAL,GAAY,oBAAZ;;AACD;;AALH;AAAA,EAAwCZ,eAAxC;IA2Ba4B,YAAb;AAAA;;AAGE,wBAAY3B,KAAZ,EAA8Bc,QAA9B;;;AACE,4CAAMd,KAAN;;AACA,QAAIc,QAAJ,EAAc;AACZ,cAAKc,QAAL,GAAgB;AACdC,QAAAA,UAAU,EAAEf,QAAQ,CAACgB,MADP;AAEdC,QAAAA,UAAU,EAAEjB,QAAQ,CAACiB;AAFP,OAAhB;;AAIA,UAAI,OAAOjB,QAAQ,CAACkB,IAAhB,KAAyB,QAA7B,EAAuC;AACrC,gBAAKJ,QAAL,CAAc3B,OAAd,GAAwBa,QAAQ,CAACkB,IAAjC;AACD,OAFD,MAEO,IAAI,OAAOlB,QAAQ,CAACkB,IAAhB,KAAyB,QAA7B,EAAuC;AAC5CnC,QAAAA,MAAM,CAACoC,MAAP,CAAc,QAAKL,QAAnB,EAA6Bd,QAAQ,CAACkB,IAAtC;AACD;AACF;;;AACF;;AAhBH;AAAA,EAAkCjC,eAAlC;IAsBamC,YAAb;AAAA;;AACE,wBAAYjC,OAAZ,EAA6Ba,QAA7B;;;AACE,uCAAM;AAAEb,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,IAAI,EAAEzB,WAAW,CAACK;AAA7B,KAAN,EAAqD+B,QAArD;AACA,YAAKH,IAAL,GAAY,cAAZ;;AACD;;AAJH;AAAA,EAAkCgB,YAAlC;IAUaQ,aAAb;AAAA;;AACE,yBAAYlC,OAAZ,EAA6Ba,QAA7B;;;AACE,wCAAM;AAAEb,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,IAAI,EAAEzB,WAAW,CAACY;AAA7B,KAAN,EAAqDwB,QAArD;AACA,YAAKH,IAAL,GAAY,eAAZ;;AACD;;AAJH;AAAA,EAAmCgB,YAAnC;IAUaS,mBAAb;AAAA;;AACE,+BAAYnC,OAAZ,EAA6Ba,QAA7B;;;AACE,wCAAM;AAAEb,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,IAAI,EAAEzB,WAAW,CAACa;AAA7B,KAAN,EAA6DuB,QAA7D;AACA,YAAKH,IAAL,GAAY,qBAAZ;;AACD;;AAJH;AAAA,EAAyCgB,YAAzC;IAUaU,YAAb;AAAA;;AACE,wBAAYpC,OAAZ,EAA6Ba,QAA7B;;;AACE,wCAAM;AAAEb,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,IAAI,EAAEzB,WAAW,CAACc;AAA7B,KAAN,EAAqDsB,QAArD;AACA,YAAKH,IAAL,GAAY,cAAZ;;AACD;;AAJH;AAAA,EAAkCgB,YAAlC;IAUaW,eAAb;AAAA;;AACE,2BAAYrC,OAAZ,EAA6Ba,QAA7B;;;AACE,wCAAM;AAAEb,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,IAAI,EAAEzB,WAAW,CAACe;AAA7B,KAAN,EAAuDqB,QAAvD;AACA,YAAKH,IAAL,GAAY,iBAAZ;;AACD;;AAJH;AAAA,EAAqCgB,YAArC;IAUaY,oBAAb;AAAA;;AAME,gCAAYtC,OAAZ,EAA6Ba,QAA7B,EAAoE0B,iBAApE;;;AACE,wCAAM;AAAEvC,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,IAAI,EAAEzB,WAAW,CAACgB;AAA7B,KAAN,EAA8DoB,QAA9D;AACA,YAAKH,IAAL,GAAY,sBAAZ;AACA,YAAK6B,iBAAL,GAAyBA,iBAAzB;;AACD;;AAVH;AAAA,EAA0Cb,YAA1C;IAgBac,uBAAb;AAAA;;AACE,mCAAYxC,OAAZ,EAA6Ba,QAA7B;;;AACE,wCAAM;AAAEb,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,IAAI,EAAEzB,WAAW,CAACiB;AAA7B,KAAN,EAAgEmB,QAAhE;AACA,YAAKH,IAAL,GAAY,yBAAZ;;AACD;;AAJH;AAAA,EAA6CgB,YAA7C;;;;"}