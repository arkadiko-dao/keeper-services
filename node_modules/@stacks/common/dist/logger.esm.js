import { config } from './config.esm.js';

var levels = ['debug', 'info', 'warn', 'error', 'none'];
var levelToInt = {};

for (var index = 0; index < levels.length; index++) {
  var level = levels[index];
  levelToInt[level] = index;
}

var Logger = /*#__PURE__*/function () {
  function Logger() {}

  Logger.error = function error(message) {
    if (!this.shouldLog('error')) return;
    console.error(this.logMessage('error', message));
  };

  Logger.warn = function warn(message) {
    if (!this.shouldLog('warn')) return;
    console.warn(this.logMessage('warn', message));
  };

  Logger.info = function info(message) {
    if (!this.shouldLog('info')) return;
    console.log(this.logMessage('info', message));
  };

  Logger.debug = function debug(message) {
    if (!this.shouldLog('debug')) return;
    console.log(this.logMessage('debug', message));
  };

  Logger.logMessage = function logMessage(level, message) {
    return "[" + level.toUpperCase() + "] " + message;
  };

  Logger.shouldLog = function shouldLog(level) {
    var currentLevel = levelToInt[config.logLevel];
    return currentLevel <= levelToInt[level];
  };

  return Logger;
}();

export { Logger };
//# sourceMappingURL=logger.esm.js.map
