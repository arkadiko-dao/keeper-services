import { inheritsLoose as _inheritsLoose, wrapNativeSuper as _wrapNativeSuper } from './_virtual/_rollupPluginBabelHelpers.js';

var ERROR_CODES = {
  MISSING_PARAMETER: 'missing_parameter',
  REMOTE_SERVICE_ERROR: 'remote_service_error',
  INVALID_STATE: 'invalid_state',
  NO_SESSION_DATA: 'no_session_data',
  DOES_NOT_EXIST: 'does_not_exist',
  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',
  INVALID_DID_ERROR: 'invalid_did_error',
  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',
  INVALID_AMOUNT_ERROR: 'invalid_amount_error',
  LOGIN_FAILED_ERROR: 'login_failed',
  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',
  CONFLICT_ERROR: 'conflict_error',
  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',
  BAD_PATH_ERROR: 'bad_path_error',
  VALIDATION_ERROR: 'validation_error',
  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',
  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',
  UNKNOWN: 'unknown'
};
Object.freeze(ERROR_CODES);
var BlockstackError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(BlockstackError, _Error);

  function BlockstackError(error) {
    var _this;

    _this = _Error.call(this) || this;
    var message = error.message;
    var bugDetails = "Error Code: " + error.code;
    var stack = _this.stack;

    if (!stack) {
      try {
        throw new Error();
      } catch (e) {
        stack = e.stack;
      }
    } else {
      bugDetails += "Stack Trace:\n" + stack;
    }

    message += "\nIf you believe this exception is caused by a bug in blockstack.js,\n      please file a bug report: https://github.com/blockstack/blockstack.js/issues\n\n" + bugDetails;
    _this.message = message;
    _this.code = error.code;
    _this.parameter = error.parameter ? error.parameter : undefined;
    return _this;
  }

  var _proto = BlockstackError.prototype;

  _proto.toString = function toString() {
    return _Error.prototype.toString.call(this) + "\n    code: " + this.code + " param: " + (this.parameter ? this.parameter : 'n/a');
  };

  return BlockstackError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
var InvalidParameterError = /*#__PURE__*/function (_BlockstackError) {
  _inheritsLoose(InvalidParameterError, _BlockstackError);

  function InvalidParameterError(parameter, message) {
    var _this2;

    if (message === void 0) {
      message = '';
    }

    _this2 = _BlockstackError.call(this, {
      code: ERROR_CODES.MISSING_PARAMETER,
      message: message,
      parameter: parameter
    }) || this;
    _this2.name = 'MissingParametersError';
    return _this2;
  }

  return InvalidParameterError;
}(BlockstackError);
var MissingParameterError = /*#__PURE__*/function (_BlockstackError2) {
  _inheritsLoose(MissingParameterError, _BlockstackError2);

  function MissingParameterError(parameter, message) {
    var _this3;

    if (message === void 0) {
      message = '';
    }

    _this3 = _BlockstackError2.call(this, {
      code: ERROR_CODES.MISSING_PARAMETER,
      message: message,
      parameter: parameter
    }) || this;
    _this3.name = 'MissingParametersError';
    return _this3;
  }

  return MissingParameterError;
}(BlockstackError);
var RemoteServiceError = /*#__PURE__*/function (_BlockstackError3) {
  _inheritsLoose(RemoteServiceError, _BlockstackError3);

  function RemoteServiceError(response, message) {
    var _this4;

    if (message === void 0) {
      message = '';
    }

    _this4 = _BlockstackError3.call(this, {
      code: ERROR_CODES.REMOTE_SERVICE_ERROR,
      message: message
    }) || this;
    _this4.response = response;
    return _this4;
  }

  return RemoteServiceError;
}(BlockstackError);
var InvalidDIDError = /*#__PURE__*/function (_BlockstackError4) {
  _inheritsLoose(InvalidDIDError, _BlockstackError4);

  function InvalidDIDError(message) {
    var _this5;

    if (message === void 0) {
      message = '';
    }

    _this5 = _BlockstackError4.call(this, {
      code: ERROR_CODES.INVALID_DID_ERROR,
      message: message
    }) || this;
    _this5.name = 'InvalidDIDError';
    return _this5;
  }

  return InvalidDIDError;
}(BlockstackError);
var NotEnoughFundsError = /*#__PURE__*/function (_BlockstackError5) {
  _inheritsLoose(NotEnoughFundsError, _BlockstackError5);

  function NotEnoughFundsError(leftToFund) {
    var _this6;

    var message = "Not enough UTXOs to fund. Left to fund: " + leftToFund;
    _this6 = _BlockstackError5.call(this, {
      code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR,
      message: message
    }) || this;
    _this6.leftToFund = leftToFund;
    _this6.name = 'NotEnoughFundsError';
    _this6.message = message;
    return _this6;
  }

  return NotEnoughFundsError;
}(BlockstackError);
var InvalidAmountError = /*#__PURE__*/function (_BlockstackError6) {
  _inheritsLoose(InvalidAmountError, _BlockstackError6);

  function InvalidAmountError(fees, specifiedAmount) {
    var _this7;

    var message = "Not enough coin to fund fees transaction fees. Fees would be " + fees + "," + (" specified spend is  " + specifiedAmount);
    _this7 = _BlockstackError6.call(this, {
      code: ERROR_CODES.INVALID_AMOUNT_ERROR,
      message: message
    }) || this;
    _this7.specifiedAmount = specifiedAmount;
    _this7.fees = fees;
    _this7.name = 'InvalidAmountError';
    _this7.message = message;
    return _this7;
  }

  return InvalidAmountError;
}(BlockstackError);
var LoginFailedError = /*#__PURE__*/function (_BlockstackError7) {
  _inheritsLoose(LoginFailedError, _BlockstackError7);

  function LoginFailedError(reason) {
    var _this8;

    var message = "Failed to login: " + reason;
    _this8 = _BlockstackError7.call(this, {
      code: ERROR_CODES.LOGIN_FAILED_ERROR,
      message: message
    }) || this;
    _this8.message = message;
    _this8.name = 'LoginFailedError';
    return _this8;
  }

  return LoginFailedError;
}(BlockstackError);
var SignatureVerificationError = /*#__PURE__*/function (_BlockstackError8) {
  _inheritsLoose(SignatureVerificationError, _BlockstackError8);

  function SignatureVerificationError(reason) {
    var _this9;

    var message = "Failed to verify signature: " + reason;
    _this9 = _BlockstackError8.call(this, {
      code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR,
      message: message
    }) || this;
    _this9.message = message;
    _this9.name = 'SignatureVerificationError';
    return _this9;
  }

  return SignatureVerificationError;
}(BlockstackError);
var FailedDecryptionError = /*#__PURE__*/function (_BlockstackError9) {
  _inheritsLoose(FailedDecryptionError, _BlockstackError9);

  function FailedDecryptionError(message) {
    var _this10;

    if (message === void 0) {
      message = 'Unable to decrypt cipher object.';
    }

    _this10 = _BlockstackError9.call(this, {
      code: ERROR_CODES.FAILED_DECRYPTION_ERROR,
      message: message
    }) || this;
    _this10.message = message;
    _this10.name = 'FailedDecryptionError';
    return _this10;
  }

  return FailedDecryptionError;
}(BlockstackError);
var InvalidStateError = /*#__PURE__*/function (_BlockstackError10) {
  _inheritsLoose(InvalidStateError, _BlockstackError10);

  function InvalidStateError(message) {
    var _this11;

    _this11 = _BlockstackError10.call(this, {
      code: ERROR_CODES.INVALID_STATE,
      message: message
    }) || this;
    _this11.message = message;
    _this11.name = 'InvalidStateError';
    return _this11;
  }

  return InvalidStateError;
}(BlockstackError);
var NoSessionDataError = /*#__PURE__*/function (_BlockstackError11) {
  _inheritsLoose(NoSessionDataError, _BlockstackError11);

  function NoSessionDataError(message) {
    var _this12;

    _this12 = _BlockstackError11.call(this, {
      code: ERROR_CODES.INVALID_STATE,
      message: message
    }) || this;
    _this12.message = message;
    _this12.name = 'NoSessionDataError';
    return _this12;
  }

  return NoSessionDataError;
}(BlockstackError);
var GaiaHubError = /*#__PURE__*/function (_BlockstackError12) {
  _inheritsLoose(GaiaHubError, _BlockstackError12);

  function GaiaHubError(error, response) {
    var _this13;

    _this13 = _BlockstackError12.call(this, error) || this;

    if (response) {
      _this13.hubError = {
        statusCode: response.status,
        statusText: response.statusText
      };

      if (typeof response.body === 'string') {
        _this13.hubError.message = response.body;
      } else if (typeof response.body === 'object') {
        Object.assign(_this13.hubError, response.body);
      }
    }

    return _this13;
  }

  return GaiaHubError;
}(BlockstackError);
var DoesNotExist = /*#__PURE__*/function (_GaiaHubError) {
  _inheritsLoose(DoesNotExist, _GaiaHubError);

  function DoesNotExist(message, response) {
    var _this14;

    _this14 = _GaiaHubError.call(this, {
      message: message,
      code: ERROR_CODES.DOES_NOT_EXIST
    }, response) || this;
    _this14.name = 'DoesNotExist';
    return _this14;
  }

  return DoesNotExist;
}(GaiaHubError);
var ConflictError = /*#__PURE__*/function (_GaiaHubError2) {
  _inheritsLoose(ConflictError, _GaiaHubError2);

  function ConflictError(message, response) {
    var _this15;

    _this15 = _GaiaHubError2.call(this, {
      message: message,
      code: ERROR_CODES.CONFLICT_ERROR
    }, response) || this;
    _this15.name = 'ConflictError';
    return _this15;
  }

  return ConflictError;
}(GaiaHubError);
var NotEnoughProofError = /*#__PURE__*/function (_GaiaHubError3) {
  _inheritsLoose(NotEnoughProofError, _GaiaHubError3);

  function NotEnoughProofError(message, response) {
    var _this16;

    _this16 = _GaiaHubError3.call(this, {
      message: message,
      code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR
    }, response) || this;
    _this16.name = 'NotEnoughProofError';
    return _this16;
  }

  return NotEnoughProofError;
}(GaiaHubError);
var BadPathError = /*#__PURE__*/function (_GaiaHubError4) {
  _inheritsLoose(BadPathError, _GaiaHubError4);

  function BadPathError(message, response) {
    var _this17;

    _this17 = _GaiaHubError4.call(this, {
      message: message,
      code: ERROR_CODES.BAD_PATH_ERROR
    }, response) || this;
    _this17.name = 'BadPathError';
    return _this17;
  }

  return BadPathError;
}(GaiaHubError);
var ValidationError = /*#__PURE__*/function (_GaiaHubError5) {
  _inheritsLoose(ValidationError, _GaiaHubError5);

  function ValidationError(message, response) {
    var _this18;

    _this18 = _GaiaHubError5.call(this, {
      message: message,
      code: ERROR_CODES.VALIDATION_ERROR
    }, response) || this;
    _this18.name = 'ValidationError';
    return _this18;
  }

  return ValidationError;
}(GaiaHubError);
var PayloadTooLargeError = /*#__PURE__*/function (_GaiaHubError6) {
  _inheritsLoose(PayloadTooLargeError, _GaiaHubError6);

  function PayloadTooLargeError(message, response, maxUploadByteSize) {
    var _this19;

    _this19 = _GaiaHubError6.call(this, {
      message: message,
      code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR
    }, response) || this;
    _this19.name = 'PayloadTooLargeError';
    _this19.maxUploadByteSize = maxUploadByteSize;
    return _this19;
  }

  return PayloadTooLargeError;
}(GaiaHubError);
var PreconditionFailedError = /*#__PURE__*/function (_GaiaHubError7) {
  _inheritsLoose(PreconditionFailedError, _GaiaHubError7);

  function PreconditionFailedError(message, response) {
    var _this20;

    _this20 = _GaiaHubError7.call(this, {
      message: message,
      code: ERROR_CODES.PRECONDITION_FAILED_ERROR
    }, response) || this;
    _this20.name = 'PreconditionFailedError';
    return _this20;
  }

  return PreconditionFailedError;
}(GaiaHubError);

export { BadPathError, BlockstackError, ConflictError, DoesNotExist, ERROR_CODES, FailedDecryptionError, GaiaHubError, InvalidAmountError, InvalidDIDError, InvalidParameterError, InvalidStateError, LoginFailedError, MissingParameterError, NoSessionDataError, NotEnoughFundsError, NotEnoughProofError, PayloadTooLargeError, PreconditionFailedError, RemoteServiceError, SignatureVerificationError, ValidationError };
//# sourceMappingURL=errors.esm.js.map
