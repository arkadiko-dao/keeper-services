{"version":3,"file":"common.cjs.production.min.js","sources":["../src/config.ts","../src/errors.ts","../../../node_modules/regenerator-runtime/runtime.js","../src/fetchUtil.ts","../src/logger.ts","../src/constants.ts","../src/utils.ts"],"sourcesContent":["// import { network } from './network'\n\n/**\n * @ignore\n */\nconst config = {\n  // network: network.defaults.MAINNET_DEFAULT,\n  network: {\n    layer1: 'placeholder',\n  },\n  logLevel: 'debug',\n};\n\nexport { config };\n","/**\n * @ignore\n */\nexport const ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  DOES_NOT_EXIST: 'does_not_exist',\n  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n  INVALID_DID_ERROR: 'invalid_did_error',\n  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n  INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n  LOGIN_FAILED_ERROR: 'login_failed',\n  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n  CONFLICT_ERROR: 'conflict_error',\n  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n  BAD_PATH_ERROR: 'bad_path_error',\n  VALIDATION_ERROR: 'validation_error',\n  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n  UNKNOWN: 'unknown',\n};\n\nObject.freeze(ERROR_CODES);\n\n/**\n * @ignore\n */\ntype ErrorData = {\n  code: string;\n  parameter?: string;\n  message: string;\n};\n\n/**\n * @ignore\n */\nexport class BlockstackError extends Error {\n  message: string;\n\n  code: string;\n\n  parameter?: string;\n\n  constructor(error: ErrorData) {\n    super();\n    let message = error.message;\n    let bugDetails = `Error Code: ${error.code}`;\n    let stack = this.stack;\n    if (!stack) {\n      try {\n        throw new Error();\n      } catch (e) {\n        stack = e.stack;\n      }\n    } else {\n      bugDetails += `Stack Trace:\\n${stack}`;\n    }\n    message += `\\nIf you believe this exception is caused by a bug in blockstack.js,\n      please file a bug report: https://github.com/blockstack/blockstack.js/issues\\n\\n${bugDetails}`;\n    this.message = message;\n    this.code = error.code;\n    this.parameter = error.parameter ? error.parameter : undefined;\n  }\n\n  toString() {\n    return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class MissingParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class RemoteServiceError extends BlockstackError {\n  response: Response;\n\n  constructor(response: Response, message: string = '') {\n    super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n    this.response = response;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidDIDError extends BlockstackError {\n  constructor(message: string = '') {\n    super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n    this.name = 'InvalidDIDError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughFundsError extends BlockstackError {\n  leftToFund: number;\n\n  constructor(leftToFund: number) {\n    const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n    super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n    this.leftToFund = leftToFund;\n    this.name = 'NotEnoughFundsError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidAmountError extends BlockstackError {\n  fees: number;\n\n  specifiedAmount: number;\n\n  constructor(fees: number, specifiedAmount: number) {\n    const message =\n      `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n      ` specified spend is  ${specifiedAmount}`;\n    super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n    this.specifiedAmount = specifiedAmount;\n    this.fees = fees;\n    this.name = 'InvalidAmountError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class LoginFailedError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to login: ${reason}`;\n    super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n    this.message = message;\n    this.name = 'LoginFailedError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class SignatureVerificationError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to verify signature: ${reason}`;\n    super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n    this.message = message;\n    this.name = 'SignatureVerificationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class FailedDecryptionError extends BlockstackError {\n  constructor(message: string = 'Unable to decrypt cipher object.') {\n    super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n    this.message = message;\n    this.name = 'FailedDecryptionError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidStateError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'InvalidStateError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NoSessionDataError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'NoSessionDataError';\n  }\n}\n\n/**\n * @ignore\n */\nexport interface GaiaHubErrorResponse {\n  status: number;\n  statusText: string;\n  body?: string | any;\n}\n\nexport interface HubErrorDetails {\n  message?: string;\n  statusCode: number;\n  statusText: string;\n  [prop: string]: any;\n}\n\n/**\n * @ignore\n */\nexport class GaiaHubError extends BlockstackError {\n  hubError?: HubErrorDetails;\n\n  constructor(error: ErrorData, response: GaiaHubErrorResponse) {\n    super(error);\n    if (response) {\n      this.hubError = {\n        statusCode: response.status,\n        statusText: response.statusText,\n      };\n      if (typeof response.body === 'string') {\n        this.hubError.message = response.body;\n      } else if (typeof response.body === 'object') {\n        Object.assign(this.hubError, response.body);\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nexport class DoesNotExist extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n    this.name = 'DoesNotExist';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ConflictError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n    this.name = 'ConflictError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughProofError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n    this.name = 'NotEnoughProofError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class BadPathError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n    this.name = 'BadPathError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ValidationError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class PayloadTooLargeError extends GaiaHubError {\n  /** Can be `null` when an oversized payload is detected client-side. */\n  hubError?: HubErrorDetails;\n\n  maxUploadByteSize: number;\n\n  constructor(message: string, response: GaiaHubErrorResponse | null, maxUploadByteSize: number) {\n    super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response!);\n    this.name = 'PayloadTooLargeError';\n    this.maxUploadByteSize = maxUploadByteSize;\n  }\n}\n\n/**\n * @ignore\n */\nexport class PreconditionFailedError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n    this.name = 'PreconditionFailedError';\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// eslint-disable-next-line import/no-unassigned-import\nimport 'cross-fetch/polyfill';\n\n/** @ignore */\nexport async function fetchPrivate(input: RequestInfo, init?: RequestInit): Promise<Response> {\n  const defaultFetchOpts: RequestInit = {\n    referrer: 'no-referrer',\n    referrerPolicy: 'no-referrer',\n  };\n  const fetchOpts = Object.assign(defaultFetchOpts, init);\n  // eslint-disable-next-line no-restricted-globals\n  const fetchResult = await fetch(input, fetchOpts);\n  return fetchResult;\n}\n","import { config } from './config';\n\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\n\nconst levelToInt: { [level: string]: number } = {};\nconst intToLevel: { [int: number]: string } = {};\n\nfor (let index = 0; index < levels.length; index++) {\n  const level = levels[index];\n  levelToInt[level] = index;\n  intToLevel[index] = level;\n}\n\n/**\n * @ignore\n */\nexport class Logger {\n  static error(message: string) {\n    if (!this.shouldLog('error')) return;\n    console.error(this.logMessage('error', message));\n  }\n\n  static warn(message: string) {\n    if (!this.shouldLog('warn')) return;\n    console.warn(this.logMessage('warn', message));\n  }\n\n  static info(message: string) {\n    if (!this.shouldLog('info')) return;\n    console.log(this.logMessage('info', message));\n  }\n\n  static debug(message: string) {\n    if (!this.shouldLog('debug')) return;\n    console.log(this.logMessage('debug', message));\n  }\n\n  static logMessage(level: string, message: string) {\n    return `[${level.toUpperCase()}] ${message}`;\n  }\n\n  static shouldLog(level: string) {\n    const currentLevel = levelToInt[config.logLevel];\n    return currentLevel <= levelToInt[level];\n  }\n}\n","enum ChainID {\n  Testnet = 0x80000000,\n  Mainnet = 0x00000001,\n}\n\nenum TransactionVersion {\n  Mainnet = 0x00,\n  Testnet = 0x80,\n}\n\nexport { ChainID, TransactionVersion };\n\n/**\n * @ignore\n */\nexport const BLOCKSTACK_DEFAULT_GAIA_HUB_URL = 'https://hub.blockstack.org';\n","import { Logger } from './logger';\n\n/**\n *  @ignore\n */\nexport const BLOCKSTACK_HANDLER = 'blockstack';\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextYear() {\n  return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextMonth() {\n  return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextHour() {\n  return new Date(new Date().setHours(new Date().getHours() + 1));\n}\n\n/**\n * Converts megabytes to bytes. Returns 0 if the input is not a finite number.\n * @ignore\n */\nexport function megabytesToBytes(megabytes: number): number {\n  if (!Number.isFinite(megabytes)) {\n    return 0;\n  }\n  return Math.floor(megabytes * 1024 * 1024);\n}\n\n/**\n * Calculate the AES-CBC ciphertext output byte length a given input length.\n * AES has a fixed block size of 16-bytes regardless key size.\n * @ignore\n */\nexport function getAesCbcOutputLength(inputByteLength: number) {\n  // AES-CBC block mode rounds up to the next block size.\n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\n\n/**\n * Calculate the base64 encoded string length for a given input length.\n * This is equivalent to the byte length when the string is ASCII or UTF8-8\n * encoded.\n * @param number\n */\nexport function getBase64OutputLength(inputByteLength: number) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\n\n/**\n * Query Strings\n * @private\n * @ignore\n */\n\nexport function updateQueryStringParameter(uri: string, key: string, value: string) {\n  const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n  if (uri.match(re)) {\n    return uri.replace(re, `$1${key}=${value}$2`);\n  } else {\n    return `${uri}${separator}${key}=${value}`;\n  }\n}\n\n/**\n * Versioning\n * @param {string} v1 - the left half of the version inequality\n * @param {string} v2 - right half of the version inequality\n * @returns {bool} iff v1 >= v2\n * @private\n * @ignore\n */\n\nexport function isLaterVersion(v1: string, v2: string) {\n  if (v1 === undefined || v1 === '') {\n    v1 = '0.0.0';\n  }\n\n  if (v2 === undefined || v1 === '') {\n    v2 = '0.0.0';\n  }\n\n  const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n  const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n\n  for (let index = 0; index < v2.length; index++) {\n    if (index >= v1.length) {\n      v2tuple.push(0);\n    }\n    if (v1tuple[index] < v2tuple[index]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * UUIDs\n * @private\n * @ignore\n */\nexport function makeUUID4() {\n  let d = new Date().getTime();\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n    d += performance.now(); // use high-precision timer if available\n  }\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n\n/**\n * Checks if both urls pass the same origin check & are absolute\n * @param  {[type]}  uri1 first uri to check\n * @param  {[type]}  uri2 second uri to check\n * @return {Boolean} true if they pass the same origin check\n * @private\n * @ignore\n */\nexport function isSameOriginAbsoluteUrl(uri1: string, uri2: string) {\n  try {\n    // The globally scoped WHATWG `URL` class is available in modern browsers and\n    // NodeJS v10 or higher. In older NodeJS versions it must be required from the\n    // `url` module.\n    let parseUrl: (url: string) => URL;\n    if (typeof URL !== 'undefined') {\n      parseUrl = url => new URL(url);\n    } else {\n      try {\n        // eslint-disable-next-line import/no-nodejs-modules, global-require\n        const nodeUrl = (require('url') as typeof import('url')).URL;\n        parseUrl = url => new nodeUrl(url);\n      } catch (error) {\n        console.log(error);\n        throw new Error('Global URL class is not available');\n      }\n    }\n\n    const parsedUri1 = parseUrl(uri1);\n    const parsedUri2 = parseUrl(uri2);\n\n    const port1 =\n      parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n    const port2 =\n      parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n\n    const match = {\n      scheme: parsedUri1.protocol === parsedUri2.protocol,\n      hostname: parsedUri1.hostname === parsedUri2.hostname,\n      port: port1 === port2,\n      absolute:\n        (uri1.includes('http://') || uri1.includes('https://')) &&\n        (uri2.includes('http://') || uri2.includes('https://')),\n    };\n\n    return match.scheme && match.hostname && match.port && match.absolute;\n  } catch (error) {\n    console.log(error);\n    console.log('Parsing error in same URL origin check');\n    // Parse error\n    return false;\n  }\n}\n\n/**\n * Returns the global scope `Window`, `WorkerGlobalScope`, or `NodeJS.Global` if available in the\n * currently executing environment.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\n *\n * This could be switched to `globalThis` once it is standardized and widely available.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\n * @ignore\n */\nexport function getGlobalScope(): Window {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  // This function is meant to be called when accessing APIs that are typically only available in\n  // web-browser/DOM environments, but we also want to support situations where running in Node.js\n  // environment, and a polyfill was added to the Node.js `global` object scope without adding the\n  // `window` global object as well.\n  if (typeof global !== 'undefined') {\n    return (global as unknown) as Window;\n  }\n  throw new Error(\n    'Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available'\n  );\n}\n\nfunction getAPIUsageErrorMessage(\n  scopeObject: unknown,\n  apiName: string,\n  usageDesc?: string\n): string {\n  if (usageDesc) {\n    return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  } else {\n    return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  }\n}\n\ninterface GetGlobalObjectOptions {\n  /**\n   * Throw an error if the object is not found.\n   * @default false\n   */\n  throwIfUnavailable?: boolean;\n  /**\n   * Additional information to include in an error if thrown.\n   */\n  usageDesc?: string;\n  /**\n   * If the object is not found, return an new empty object instead of undefined.\n   * Requires [[throwIfUnavailable]] to be falsey.\n   * @default false\n   */\n  returnEmptyObject?: boolean;\n}\n\n/**\n * Returns an object from the global scope (`Window` or `WorkerGlobalScope`) if it\n * is available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable and will be\n * `undefined` unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nexport function getGlobalObject<K extends Extract<keyof Window, string>>(\n  name: K,\n  { throwIfUnavailable, usageDesc, returnEmptyObject }: GetGlobalObjectOptions = {}\n): Window[K] | undefined {\n  let globalScope: Window | undefined = undefined;\n  try {\n    globalScope = getGlobalScope();\n    if (globalScope) {\n      const obj = globalScope[name];\n      if (obj) {\n        return obj;\n      }\n    }\n  } catch (error) {\n    Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n  }\n  if (throwIfUnavailable) {\n    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n    Logger.error(errMsg);\n    throw new Error(errMsg);\n  }\n  if (returnEmptyObject) {\n    return {} as any;\n  }\n  return undefined;\n}\n\n/**\n * Returns a specified subset of objects from the global scope (`Window` or `WorkerGlobalScope`)\n * if they are available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable will be `undefined`\n * unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nexport function getGlobalObjects<K extends Extract<keyof Window, string>>(\n  names: K[],\n  { throwIfUnavailable, usageDesc, returnEmptyObject }: GetGlobalObjectOptions = {}\n): Pick<Window, K> {\n  let globalScope: Window | undefined;\n  try {\n    globalScope = getGlobalScope();\n  } catch (error) {\n    Logger.error(`Error getting global scope: ${error}`);\n    if (throwIfUnavailable) {\n      const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n      Logger.error(errMsg);\n      throw errMsg;\n    } else if (returnEmptyObject) {\n      globalScope = {} as any;\n    }\n  }\n\n  const result: Pick<Window, K> = {} as any;\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    try {\n      if (globalScope) {\n        const obj = globalScope[name];\n        if (obj) {\n          result[name] = obj;\n        } else if (throwIfUnavailable) {\n          const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n          Logger.error(errMsg);\n          throw new Error(errMsg);\n        } else if (returnEmptyObject) {\n          result[name] = {} as any;\n        }\n      }\n    } catch (error) {\n      if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n      }\n    }\n  }\n  return result;\n}\n"],"names":["config","network","layer1","logLevel","ERROR_CODES","MISSING_PARAMETER","REMOTE_SERVICE_ERROR","INVALID_STATE","NO_SESSION_DATA","DOES_NOT_EXIST","FAILED_DECRYPTION_ERROR","INVALID_DID_ERROR","NOT_ENOUGH_FUNDS_ERROR","INVALID_AMOUNT_ERROR","LOGIN_FAILED_ERROR","SIGNATURE_VERIFICATION_ERROR","CONFLICT_ERROR","NOT_ENOUGH_PROOF_ERROR","BAD_PATH_ERROR","VALIDATION_ERROR","PAYLOAD_TOO_LARGE_ERROR","PRECONDITION_FAILED_ERROR","UNKNOWN","Object","freeze","BlockstackError","error","message","bugDetails","code","stack","_this","Error","e","parameter","undefined","toString","this","InvalidParameterError","name","MissingParameterError","RemoteServiceError","response","InvalidDIDError","NotEnoughFundsError","leftToFund","InvalidAmountError","fees","specifiedAmount","LoginFailedError","reason","SignatureVerificationError","FailedDecryptionError","InvalidStateError","NoSessionDataError","GaiaHubError","hubError","statusCode","status","statusText","body","assign","_this13","DoesNotExist","ConflictError","NotEnoughProofError","BadPathError","ValidationError","PayloadTooLargeError","maxUploadByteSize","PreconditionFailedError","runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","input","init","fetchOpts","referrer","referrerPolicy","fetch","levels","levelToInt","index","ChainID","TransactionVersion","Logger","shouldLog","console","logMessage","warn","log","debug","level","toUpperCase","getGlobalScope","window","global","getAPIUsageErrorMessage","scopeObject","apiName","usageDesc","inputByteLength","Math","floor","ceil","throwIfUnavailable","returnEmptyObject","globalScope","errMsg","names","v1","v2","v1tuple","split","map","x","parseInt","v2tuple","uri1","uri2","parseUrl","URL","url","nodeUrl","require","parsedUri1","parsedUri2","port1","port","protocol","port2","match","scheme","hostname","absolute","includes","d","Date","getTime","performance","now","replace","c","r","random","megabytes","Number","isFinite","setHours","getHours","setMonth","getMonth","setFullYear","getFullYear","uri","re","RegExp","separator","indexOf"],"mappings":"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"}