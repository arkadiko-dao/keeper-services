{"version":3,"file":"stacking.umd.development.js","sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/constants.ts","../src/utils.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export enum StackingErrors {\n  ERR_STACKING_UNREACHABLE = 255,\n  ERR_STACKING_INSUFFICIENT_FUNDS = 1,\n  ERR_STACKING_INVALID_LOCK_PERIOD = 2,\n  ERR_STACKING_ALREADY_STACKED = 3,\n  ERR_STACKING_NO_SUCH_PRINCIPAL = 4,\n  ERR_STACKING_EXPIRED = 5,\n  ERR_STACKING_STX_LOCKED = 6,\n  ERR_STACKING_PERMISSION_DENIED = 9,\n  ERR_STACKING_THRESHOLD_NOT_MET = 11,\n  ERR_STACKING_POX_ADDRESS_IN_USE = 12,\n  ERR_STACKING_INVALID_POX_ADDRESS = 13,\n  ERR_STACKING_ALREADY_REJECTED = 17,\n  ERR_STACKING_INVALID_AMOUNT = 18,\n  ERR_NOT_ALLOWED = 19,\n  ERR_STACKING_ALREADY_DELEGATED = 20,\n  ERR_DELEGATION_EXPIRES_DURING_LOCK = 21,\n  ERR_DELEGATION_TOO_MUCH_LOCKED = 22,\n  ERR_DELEGATION_POX_ADDR_REQUIRED = 23,\n  ERR_INVALID_START_BURN_HEIGHT = 24,\n}\n","import { AddressHashMode } from '@stacks/transactions';\nimport { address } from 'bitcoinjs-lib';\nimport BN from 'bn.js';\nimport { StackingErrors } from './constants';\n\nexport class InvalidAddressError extends Error {\n  innerError?: Error;\n  constructor(address: string, innerError?: Error) {\n    const msg = `${address} is not a valid P2PKH or P2SH address -- native P2WPKH and native P2WSH are not supported in PoX.`;\n    super(msg);\n    this.message = msg;\n    this.name = this.constructor.name;\n    this.innerError = innerError;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n}\n\nexport function btcAddressVersionToHashMode(btcAddressVersion: number): AddressHashMode {\n  switch (btcAddressVersion) {\n    case 0: // btc mainnet P2PKH\n      return AddressHashMode.SerializeP2PKH;\n    case 111: // btc mainnet P2PKH\n      return AddressHashMode.SerializeP2PKH;\n    case 5: // btc mainnet P2SH\n      return AddressHashMode.SerializeP2SH;\n    case 196: // btc testnet P2SH\n      return AddressHashMode.SerializeP2SH;\n    default:\n      throw new Error('Invalid pox address version');\n  }\n}\n\nexport function getAddressHashMode(btcAddress: string) {\n  try {\n    const { version } = address.fromBase58Check(btcAddress);\n    return btcAddressVersionToHashMode(version);\n  } catch (error) {\n    throw new InvalidAddressError(btcAddress, error);\n  }\n}\n\nexport function decodeBtcAddress(btcAddress: string) {\n  let b58Result: address.Base58CheckResult;\n  try {\n    b58Result = address.fromBase58Check(btcAddress);\n  } catch (error) {\n    throw new InvalidAddressError(btcAddress, error);\n  }\n  const hashMode = btcAddressVersionToHashMode(b58Result.version);\n  return {\n    hashMode,\n    data: b58Result.hash,\n  };\n}\n\nexport function getBTCAddress(version: Buffer, checksum: Buffer) {\n  const btcAddress = address.toBase58Check(checksum, new BN(version).toNumber());\n  return btcAddress;\n}\n\nexport function getErrorString(error: StackingErrors): string {\n  switch (error) {\n    case StackingErrors.ERR_STACKING_UNREACHABLE:\n      return 'Stacking unreachable';\n    case StackingErrors.ERR_STACKING_INSUFFICIENT_FUNDS:\n      return 'Insufficient funds';\n    case StackingErrors.ERR_STACKING_INVALID_LOCK_PERIOD:\n      return 'Invalid lock period';\n    case StackingErrors.ERR_STACKING_ALREADY_STACKED:\n      return 'Account already stacked. Concurrent stacking not allowed.';\n    case StackingErrors.ERR_STACKING_NO_SUCH_PRINCIPAL:\n      return 'Principal does not exist';\n    case StackingErrors.ERR_STACKING_EXPIRED:\n      return 'Stacking expired';\n    case StackingErrors.ERR_STACKING_STX_LOCKED:\n      return 'STX balance is locked';\n    case StackingErrors.ERR_STACKING_PERMISSION_DENIED:\n      return 'Permission denied';\n    case StackingErrors.ERR_STACKING_THRESHOLD_NOT_MET:\n      return 'Stacking threshold not met';\n    case StackingErrors.ERR_STACKING_POX_ADDRESS_IN_USE:\n      return 'PoX address already in use';\n    case StackingErrors.ERR_STACKING_INVALID_POX_ADDRESS:\n      return 'Invalid PoX address';\n    case StackingErrors.ERR_STACKING_ALREADY_REJECTED:\n      return 'Stacking already rejected';\n    case StackingErrors.ERR_STACKING_INVALID_AMOUNT:\n      return 'Invalid amount';\n    case StackingErrors.ERR_NOT_ALLOWED:\n      return 'Stacking not allowed';\n    case StackingErrors.ERR_STACKING_ALREADY_DELEGATED:\n      return 'Already delegated';\n    case StackingErrors.ERR_DELEGATION_EXPIRES_DURING_LOCK:\n      return 'Delegation expires during lock period';\n    case StackingErrors.ERR_DELEGATION_TOO_MUCH_LOCKED:\n      return 'Delegation too much locked';\n    case StackingErrors.ERR_DELEGATION_POX_ADDR_REQUIRED:\n      return 'PoX address required for delegation';\n    case StackingErrors.ERR_INVALID_START_BURN_HEIGHT:\n      return 'Invalid start burn height';\n  }\n}\n","import {\n  makeContractCall,\n  bufferCV,\n  uintCV,\n  tupleCV,\n  ClarityType,\n  broadcastTransaction,\n  standardPrincipalCV,\n  ContractCallOptions,\n  TxBroadcastResult,\n  UIntCV,\n  BufferCV,\n  ContractCallPayload,\n  StacksTransaction,\n  callReadOnlyFunction,\n  cvToString,\n  ClarityValue,\n  ResponseErrorCV,\n  SomeCV,\n  TupleCV,\n  noneCV,\n  someCV,\n  validateStacksAddress,\n} from '@stacks/transactions';\nimport { StacksNetwork } from '@stacks/network';\nimport BN from 'bn.js';\nimport { StackingErrors } from './constants';\nimport { fetchPrivate } from '@stacks/common';\nimport { decodeBtcAddress } from './utils';\nexport * from './utils';\n\nexport interface PoxInfo {\n  contract_id: string;\n  first_burnchain_block_height: number;\n  min_amount_ustx: string;\n  registration_window_length: 250;\n  rejection_fraction: number;\n  reward_cycle_id: number;\n  reward_cycle_length: number;\n  rejection_votes_left_required: number;\n}\n\nexport type StackerInfo =\n  | {\n      stacked: false;\n    }\n  | {\n      stacked: true;\n      details: {\n        amount_microstx: string;\n        first_reward_cycle: number;\n        lock_period: number;\n        unlock_height: number;\n        pox_address: {\n          version: Buffer;\n          hashbytes: Buffer;\n        };\n      };\n    };\n\nexport interface BlockTimeInfo {\n  mainnet: {\n    target_block_time: number;\n  };\n  testnet: {\n    target_block_time: number;\n  };\n}\n\nexport interface CoreInfo {\n  burn_block_height: number;\n  stable_pox_consensus: string;\n}\n\nexport interface BalanceInfo {\n  balance: string;\n  nonce: number;\n}\n\nexport interface StackingEligibility {\n  eligible: boolean;\n  reason?: string;\n}\n\n/**\n * Lock stx check options\n *\n * @param  {string} poxAddress - the reward Bitcoin address\n * @param  {number} cycles - number of cycles to lock\n */\nexport interface CanLockStxOptions {\n  poxAddress: string;\n  cycles: number;\n}\n\n/**\n * Lock stx options\n *\n * @param  {string} key - private key to sign transaction\n * @param  {string} poxAddress - the reward Bitcoin address\n * @param  {number} cycles - number of cycles to lock\n * @param  {BN} amountMicroStx - number of microstacks to lock\n * @param  {number} burnBlockHeight - the burnchain block height to begin lock\n */\nexport interface LockStxOptions {\n  privateKey: string;\n  cycles: number;\n  poxAddress: string;\n  amountMicroStx: BN;\n  burnBlockHeight: number;\n}\n\n/**\n * Delegate stx options\n *\n * @param  {BN} amountMicroStx - number of microstacks to delegate\n * @param  {string} delegateTo - the STX address of the delegatee\n * @param  {number | optional} untilBurnBlockHeight - the burnchain block height after which delegation is revoked\n * @param  {string | optional} poxAddress - the reward Bitcoin address of the delegator\n * @param  {string} privateKey - private key to sign transaction\n */\nexport interface DelegateStxOptions {\n  amountMicroStx: BN;\n  delegateTo: string;\n  untilBurnBlockHeight?: number;\n  poxAddress?: string;\n  privateKey: string;\n}\n\n/**\n * Delegate stack stx options\n *\n * @param  {string} stacker - the STX address of the delegator\n * @param  {BN} amountMicroStx - number of microstacks to lock\n * @param  {string} poxAddress - the reward Bitcoin address of the delegator\n * @param  {number} burnBlockHeight - the burnchain block height to begin lock\n * @param  {number} cycles - number of cycles to lock\n * @param  {string} privateKey - private key to sign transaction\n * @param  {BN | optional} nonce - nonce for the transaction\n */\nexport interface DelegateStackStxOptions {\n  stacker: string;\n  amountMicroStx: BN;\n  poxAddress: string;\n  burnBlockHeight: number;\n  cycles: number;\n  privateKey: string;\n  nonce?: BN;\n}\n\nexport interface StackAggregationCommitOptions {\n  poxAddress: string;\n  rewardCycle: number;\n  privateKey: string;\n}\n\nexport class StackingClient {\n  constructor(public address: string, public network: StacksNetwork) {}\n\n  /**\n   * Get stacks node info\n   *\n   * @returns {Promise<CoreInfo>} that resolves to a CoreInfo response if the operation succeeds\n   */\n  async getCoreInfo(): Promise<CoreInfo> {\n    const url = this.network.getInfoUrl();\n    return fetchPrivate(url).then(res => res.json());\n  }\n\n  /**\n   * Get stacks node pox info\n   *\n   * @returns {Promise<PoxInfo>} that resolves to a PoxInfo response if the operation succeeds\n   */\n  async getPoxInfo(): Promise<PoxInfo> {\n    const url = this.network.getPoxInfoUrl();\n    return fetchPrivate(url).then(res => res.json());\n  }\n\n  /**\n   * Get stacks node target block time\n   *\n   * @returns {Promise<number>} that resolves to a number if the operation succeeds\n   */\n  async getTargetBlockTime(): Promise<number> {\n    const url = this.network.getBlockTimeInfoUrl();\n    const res = await fetchPrivate(url).then(res => res.json());\n\n    if (this.network.isMainnet()) {\n      return res.mainnet.target_block_time;\n    } else {\n      return res.testnet.target_block_time;\n    }\n  }\n\n  async getAccountStatus(): Promise<any> {\n    const url = this.network.getAccountApiUrl(this.address);\n    return fetchPrivate(url).then(res => res.json());\n  }\n\n  /**\n   * Get account balance\n   *\n   * @returns {Promise<BN>} that resolves to a BigNum if the operation succeeds\n   */\n  async getAccountBalance(): Promise<BN> {\n    return this.getAccountStatus().then(res => {\n      let balanceHex = res.balance;\n      if (res.balance.startsWith('0x')) {\n        balanceHex = res.balance.substr(2);\n      }\n      return new BN(balanceHex, 'hex');\n    });\n  }\n\n  /**\n   * Get reward cycle duration in seconds\n   *\n   * @returns {Promise<number>} that resolves to a number if the operation succeeds\n   */\n  async getCycleDuration(): Promise<number> {\n    const poxInfoPromise = this.getPoxInfo();\n    const targetBlockTimePromise = await this.getTargetBlockTime();\n\n    return Promise.all([poxInfoPromise, targetBlockTimePromise]).then(\n      ([poxInfo, targetBlockTime]) => {\n        return poxInfo.reward_cycle_length * targetBlockTime;\n      }\n    );\n  }\n\n  /**\n   * Get number of seconds until next reward cycle\n   *\n   * @returns {Promise<number>} that resolves to a number if the operation succeeds\n   */\n  async getSecondsUntilNextCycle(): Promise<number> {\n    const poxInfoPromise = this.getPoxInfo();\n    const targetBlockTimePromise = await this.getTargetBlockTime();\n    const coreInfoPromise = this.getCoreInfo();\n\n    return Promise.all([poxInfoPromise, targetBlockTimePromise, coreInfoPromise]).then(\n      ([poxInfo, targetBlockTime, coreInfo]) => {\n        const blocksToNextCycle =\n          poxInfo.reward_cycle_length -\n          ((coreInfo.burn_block_height - poxInfo.first_burnchain_block_height) %\n            poxInfo.reward_cycle_length);\n        return blocksToNextCycle * targetBlockTime;\n      }\n    );\n  }\n\n  /**\n   * Check if stacking is enabled for next reward cycle\n   *\n   * @returns {Promise<boolean>} that resolves to a bool if the operation succeeds\n   */\n  async isStackingEnabledNextCycle(): Promise<boolean> {\n    return (await this.getPoxInfo()).rejection_votes_left_required > 0;\n  }\n\n  /**\n   * Check if account has minimum require amount of Stacks for stacking\n   *\n   * @returns {Promise<boolean>} that resolves to a bool if the operation succeeds\n   */\n  async hasMinimumStx(): Promise<boolean> {\n    const balance: BN = await this.getAccountBalance();\n    const min: BN = new BN((await this.getPoxInfo()).min_amount_ustx.toString());\n    return balance.gte(min);\n  }\n\n  /**\n   * Check if account can lock stx\n   *\n   * @param {CanLockStxOptions} options - a required lock STX options object\n   *\n   * @returns {Promise<StackingEligibility>} that resolves to a StackingEligibility object if the operation succeeds\n   */\n  async canStack({ poxAddress, cycles }: CanLockStxOptions): Promise<StackingEligibility> {\n    const balancePromise: Promise<BN> = this.getAccountBalance();\n    const poxInfoPromise = this.getPoxInfo();\n\n    return Promise.all([balancePromise, poxInfoPromise])\n      .then(([balance, poxInfo]) => {\n        const { hashMode, data } = decodeBtcAddress(poxAddress);\n        const hashModeBuffer = bufferCV(new BN(hashMode, 10).toArrayLike(Buffer));\n        const hashbytes = bufferCV(data);\n        const poxAddressCV = tupleCV({\n          hashbytes,\n          version: hashModeBuffer,\n        });\n\n        const [contractAddress, contractName] = this.parseContractId(poxInfo.contract_id);\n\n        return callReadOnlyFunction({\n          network: this.network,\n          contractName,\n          contractAddress,\n          functionName: 'can-stack-stx',\n          senderAddress: this.address,\n          functionArgs: [\n            poxAddressCV,\n            uintCV(balance.toString()),\n            uintCV(poxInfo.reward_cycle_id),\n            uintCV(cycles.toString()),\n          ],\n        });\n      })\n      .then((responseCV: ClarityValue) => {\n        if (responseCV.type === ClarityType.ResponseOk) {\n          return {\n            eligible: true,\n          };\n        } else {\n          const errorCV = responseCV as ResponseErrorCV;\n          return {\n            eligible: false,\n            reason: StackingErrors[+cvToString(errorCV.value)],\n          };\n        }\n      });\n  }\n\n  /**\n   * Generate and broadcast a stacking transaction to lock STX\n   *\n   * @param {LockStxOptions} options - a required lock STX options object\n   *\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async stack({\n    amountMicroStx,\n    poxAddress,\n    cycles,\n    privateKey,\n    burnBlockHeight,\n  }: LockStxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const contract = poxInfo.contract_id;\n\n    const txOptions = this.getStackOptions({\n      amountMicroStx,\n      cycles,\n      poxAddress,\n      contract,\n      burnBlockHeight,\n    });\n    const tx = await makeContractCall({\n      ...txOptions,\n      senderKey: privateKey,\n    });\n\n    return broadcastTransaction(tx, txOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegatee, generate and broadcast a transaction to create a delegation relationship\n   *\n   * @param {DelegateStxOptions} options - a required delegate STX options object\n   *\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async delegateStx({\n    amountMicroStx,\n    delegateTo,\n    untilBurnBlockHeight,\n    poxAddress,\n    privateKey,\n  }: DelegateStxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const contract = poxInfo.contract_id;\n\n    const txOptions = this.getDelegateOptions({\n      contract,\n      amountMicroStx,\n      delegateTo,\n      untilBurnBlockHeight,\n      poxAddress,\n    });\n\n    const tx = await makeContractCall({\n      ...txOptions,\n      senderKey: privateKey,\n    });\n\n    return broadcastTransaction(tx, txOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegator, generate and broadcast transactions to stack for multiple delegatees. This will lock up tokens owned by the delegatees.\n   *\n   * @param {DelegateStackStxOptions} options - a required delegate stack STX options object\n   *\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async delegateStackStx({\n    stacker,\n    amountMicroStx,\n    poxAddress,\n    burnBlockHeight,\n    cycles,\n    privateKey,\n    nonce,\n  }: DelegateStackStxOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const contract = poxInfo.contract_id;\n\n    const txOptions = this.getDelegateStackOptions({\n      contract,\n      stacker,\n      amountMicroStx,\n      poxAddress,\n      burnBlockHeight,\n      cycles,\n      nonce,\n    });\n    const tx = await makeContractCall({\n      ...txOptions,\n      senderKey: privateKey,\n    });\n\n    return broadcastTransaction(tx, txOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegator, generate and broadcast a transaction to commit partially committed delegatee tokens\n   *\n   * @param {StackAggregationCommitOptions} options - a required stack aggregation commit options object\n   *\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async stackAggregationCommit({\n    poxAddress,\n    rewardCycle,\n    privateKey,\n  }: StackAggregationCommitOptions): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const contract = poxInfo.contract_id;\n\n    const txOptions = this.getStackAggregationCommitOptions({\n      contract,\n      poxAddress,\n      rewardCycle,\n    });\n    const tx = await makeContractCall({\n      ...txOptions,\n      senderKey: privateKey,\n    });\n\n    return broadcastTransaction(tx, txOptions.network as StacksNetwork);\n  }\n\n  /**\n   * As a delegatee, generate and broadcast a transaction to terminate the delegation relationship\n   *\n   * @param {string} privateKey - the private key to be used for the revoke call\n   *\n   * @returns {Promise<string>} that resolves to a broadcasted txid if the operation succeeds\n   */\n  async revokeDelegateStx(privateKey: string): Promise<TxBroadcastResult> {\n    const poxInfo = await this.getPoxInfo();\n    const contract = poxInfo.contract_id;\n\n    const txOptions = this.getRevokeDelegateStxOptions(contract);\n\n    const tx = await makeContractCall({\n      ...txOptions,\n      senderKey: privateKey,\n    });\n\n    return broadcastTransaction(tx, txOptions.network as StacksNetwork);\n  }\n\n  getStackOptions({\n    amountMicroStx,\n    poxAddress,\n    cycles,\n    contract,\n    burnBlockHeight,\n  }: {\n    cycles: number;\n    poxAddress: string;\n    amountMicroStx: BN;\n    contract: string;\n    burnBlockHeight: number;\n  }) {\n    const { hashMode, data } = decodeBtcAddress(poxAddress);\n    const hashModeBuffer = bufferCV(new BN(hashMode, 10).toArrayLike(Buffer));\n    const hashbytes = bufferCV(data);\n    const address = tupleCV({\n      hashbytes,\n      version: hashModeBuffer,\n    });\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const network = this.network;\n    const txOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'stack-stx',\n      // sum of uStx, address, burn_block_height, num_cycles\n      functionArgs: [\n        uintCV(amountMicroStx.toString(10)),\n        address,\n        uintCV(burnBlockHeight),\n        uintCV(cycles),\n      ],\n      validateWithAbi: true,\n      network,\n    };\n    return txOptions;\n  }\n\n  getDelegateOptions({\n    contract,\n    amountMicroStx,\n    delegateTo,\n    untilBurnBlockHeight,\n    poxAddress,\n  }: {\n    contract: string;\n    amountMicroStx: BN;\n    delegateTo: string;\n    untilBurnBlockHeight?: number;\n    poxAddress?: string;\n  }) {\n    let address = undefined;\n\n    if (poxAddress) {\n      const { hashMode, data } = decodeBtcAddress(poxAddress);\n      const hashModeBuffer = bufferCV(new BN(hashMode, 10).toArrayLike(Buffer));\n      const hashbytes = bufferCV(data);\n      address = someCV(\n        tupleCV({\n          hashbytes,\n          version: hashModeBuffer,\n        })\n      );\n    }\n\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const network = this.network;\n    const txOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'delegate-stx',\n      functionArgs: [\n        uintCV(amountMicroStx.toString(10)),\n        standardPrincipalCV(delegateTo),\n        untilBurnBlockHeight ? someCV(uintCV(untilBurnBlockHeight)) : noneCV(),\n        address ? address : noneCV(),\n      ],\n      validateWithAbi: true,\n      network,\n    };\n    return txOptions;\n  }\n\n  getDelegateStackOptions({\n    contract,\n    stacker,\n    amountMicroStx,\n    poxAddress,\n    burnBlockHeight,\n    cycles,\n    nonce,\n  }: {\n    contract: string;\n    stacker: string;\n    amountMicroStx: BN;\n    poxAddress: string;\n    burnBlockHeight: number;\n    cycles: number;\n    nonce?: BN;\n  }) {\n    const { hashMode, data } = decodeBtcAddress(poxAddress);\n    const hashModeBuffer = bufferCV(new BN(hashMode, 10).toArrayLike(Buffer));\n    const hashbytes = bufferCV(data);\n    const address = tupleCV({\n      hashbytes,\n      version: hashModeBuffer,\n    });\n\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const network = this.network;\n    const txOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'delegate-stack-stx',\n      functionArgs: [\n        standardPrincipalCV(stacker),\n        uintCV(amountMicroStx.toString(10)),\n        address,\n        uintCV(burnBlockHeight),\n        uintCV(cycles),\n      ],\n      validateWithAbi: true,\n      network,\n    };\n\n    if (nonce) {\n      txOptions.nonce = nonce;\n    }\n\n    return txOptions;\n  }\n\n  getStackAggregationCommitOptions({\n    contract,\n    poxAddress,\n    rewardCycle,\n  }: {\n    contract: string;\n    poxAddress: string;\n    rewardCycle: number;\n  }) {\n    const { hashMode, data } = decodeBtcAddress(poxAddress);\n    const hashModeBuffer = bufferCV(new BN(hashMode, 10).toArrayLike(Buffer));\n    const hashbytes = bufferCV(data);\n    const address = tupleCV({\n      hashbytes,\n      version: hashModeBuffer,\n    });\n\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const network = this.network;\n    const txOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'stack-aggregation-commit',\n      functionArgs: [address, uintCV(rewardCycle)],\n      validateWithAbi: true,\n      network,\n    };\n    return txOptions;\n  }\n\n  getRevokeDelegateStxOptions(contract: string) {\n    const [contractAddress, contractName] = this.parseContractId(contract);\n    const network = this.network;\n    const txOptions: ContractCallOptions = {\n      contractAddress,\n      contractName,\n      functionName: 'revoke-delegate-stx',\n      functionArgs: [],\n      validateWithAbi: true,\n      network,\n    };\n    return txOptions;\n  }\n\n  /**\n   * Check stacking status\n   *\n   * @returns {Promise<StackerInfo>} that resolves to a StackerInfo object if the operation succeeds\n   */\n  async getStatus(): Promise<StackerInfo> {\n    const poxInfo = await this.getPoxInfo();\n    const [contractAddress, contractName] = this.parseContractId(poxInfo.contract_id);\n    const account = await this.getAccountStatus();\n    const functionName = 'get-stacker-info';\n\n    return callReadOnlyFunction({\n      contractAddress,\n      contractName,\n      functionName,\n      senderAddress: this.address,\n      functionArgs: [standardPrincipalCV(this.address)],\n      network: this.network,\n    }).then((responseCV: ClarityValue) => {\n      if (responseCV.type === ClarityType.OptionalSome) {\n        const someCV = responseCV as SomeCV;\n        const tupleCV: TupleCV = someCV.value as TupleCV;\n        const poxAddress: TupleCV = tupleCV.data['pox-addr'] as TupleCV;\n        const amountMicroStx: UIntCV = tupleCV.data['amount-ustx'] as UIntCV;\n        const firstRewardCycle: UIntCV = tupleCV.data['first-reward-cycle'] as UIntCV;\n        const lockPeriod: UIntCV = tupleCV.data['lock-period'] as UIntCV;\n        const version: BufferCV = poxAddress.data['version'] as BufferCV;\n        const hashbytes: BufferCV = poxAddress.data['hashbytes'] as BufferCV;\n\n        return {\n          stacked: true,\n          details: {\n            amount_microstx: amountMicroStx.value.toString(),\n            first_reward_cycle: firstRewardCycle.value.toNumber(),\n            lock_period: lockPeriod.value.toNumber(),\n            unlock_height: account.unlock_height,\n            pox_address: {\n              version: version.buffer,\n              hashbytes: hashbytes.buffer,\n            },\n          },\n        };\n      } else if (responseCV.type === ClarityType.OptionalNone) {\n        return {\n          stacked: false,\n        };\n      } else {\n        throw new Error(`Error fetching stacker info`);\n      }\n    });\n  }\n\n  /**\n   * Adjust microstacks amount for locking after taking into account transaction fees\n   *\n   * @returns {StacksTransaction} that resolves to a transaction object if the operation succeeds\n   */\n  modifyLockTxFee({ tx, amountMicroStx }: { tx: StacksTransaction; amountMicroStx: BN }) {\n    const fee = tx.auth.getFee() as BN;\n    (tx.payload as ContractCallPayload).functionArgs[0] = uintCV(\n      new BN(amountMicroStx.toString(10), 10).sub(fee).toArrayLike(Buffer)\n    );\n    return tx;\n  }\n\n  /**\n   * Parses a contract identifier and ensures it is formatted correctly\n   *\n   * @returns {Array<string>} a contract address and name\n   */\n  parseContractId(contract: string): Array<string> {\n    const parts = contract.split('.');\n\n    if (parts.length !== 2 || !validateStacksAddress(parts[0]) || parts[1] !== 'pox') {\n      throw new Error('Stacking contract ID is malformed');\n    }\n\n    return parts;\n  }\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","arg","type","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","then","unwrapped","error","previousPromise","enqueue","callInvokeWithMethodAndArg","async","Promise","iter","next","done","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","info","resultName","nextLoc","toString","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","StackingErrors","InvalidAddressError","address","innerError","msg","message","captureStackTrace","btcAddressVersionToHashMode","btcAddressVersion","AddressHashMode","SerializeP2PKH","SerializeP2SH","getAddressHashMode","btcAddress","fromBase58Check","version","decodeBtcAddress","b58Result","hashMode","data","hash","getBTCAddress","checksum","toBase58Check","BN","toNumber","getErrorString","ERR_STACKING_UNREACHABLE","ERR_STACKING_INSUFFICIENT_FUNDS","ERR_STACKING_INVALID_LOCK_PERIOD","ERR_STACKING_ALREADY_STACKED","ERR_STACKING_NO_SUCH_PRINCIPAL","ERR_STACKING_EXPIRED","ERR_STACKING_STX_LOCKED","ERR_STACKING_PERMISSION_DENIED","ERR_STACKING_THRESHOLD_NOT_MET","ERR_STACKING_POX_ADDRESS_IN_USE","ERR_STACKING_INVALID_POX_ADDRESS","ERR_STACKING_ALREADY_REJECTED","ERR_STACKING_INVALID_AMOUNT","ERR_NOT_ALLOWED","ERR_STACKING_ALREADY_DELEGATED","ERR_DELEGATION_EXPIRES_DURING_LOCK","ERR_DELEGATION_TOO_MUCH_LOCKED","ERR_DELEGATION_POX_ADDR_REQUIRED","ERR_INVALID_START_BURN_HEIGHT","StackingClient","network","getCoreInfo","url","getInfoUrl","fetchPrivate","res","json","getPoxInfo","getPoxInfoUrl","getTargetBlockTime","getBlockTimeInfoUrl","isMainnet","mainnet","target_block_time","testnet","getAccountStatus","getAccountApiUrl","getAccountBalance","balanceHex","balance","startsWith","substr","getCycleDuration","poxInfoPromise","targetBlockTimePromise","all","poxInfo","targetBlockTime","reward_cycle_length","getSecondsUntilNextCycle","coreInfoPromise","coreInfo","blocksToNextCycle","burn_block_height","first_burnchain_block_height","isStackingEnabledNextCycle","rejection_votes_left_required","hasMinimumStx","min_amount_ustx","min","gte","canStack","poxAddress","cycles","balancePromise","hashModeBuffer","bufferCV","toArrayLike","Buffer","hashbytes","poxAddressCV","tupleCV","parseContractId","contract_id","contractAddress","contractName","callReadOnlyFunction","functionName","senderAddress","functionArgs","uintCV","reward_cycle_id","responseCV","ClarityType","ResponseOk","eligible","errorCV","reason","cvToString","stack","amountMicroStx","privateKey","burnBlockHeight","contract","txOptions","getStackOptions","makeContractCall","senderKey","tx","broadcastTransaction","delegateStx","delegateTo","untilBurnBlockHeight","getDelegateOptions","delegateStackStx","stacker","nonce","getDelegateStackOptions","stackAggregationCommit","rewardCycle","getStackAggregationCommitOptions","revokeDelegateStx","getRevokeDelegateStxOptions","validateWithAbi","someCV","standardPrincipalCV","noneCV","getStatus","account","OptionalSome","firstRewardCycle","lockPeriod","stacked","details","amount_microstx","first_reward_cycle","lock_period","unlock_height","pox_address","buffer","OptionalNone","modifyLockTxFee","fee","auth","getFee","payload","sub","parts","split","validateStacksAddress"],"mappings":"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"}